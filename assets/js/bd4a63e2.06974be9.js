"use strict";(self.webpackChunksap_cloud_sdk_documentation=self.webpackChunksap_cloud_sdk_documentation||[]).push([[9125,4653,3922,915,3728,8011,5970,7975,5187,191,585,5844,3941,1784,2416,5703,6487,3975,2694,5131,8083,9207,6147,2746,9243,861,7856,1697,9355,8634,809,4152,8777,8538,3462,1275,4630,2158,9524,654,3039,5302,4327,3742,9812,8048],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var u=a.createContext({}),l=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=l(e.components);return a.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,r=e.originalType,u=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=l(n),m=s,f=p["".concat(u,".").concat(m)]||p[m]||c[m]||r;return n?a.createElement(f,o(o({ref:t},d),{},{components:n})):a.createElement(f,o({ref:t},d))}));function m(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=n.length,o=new Array(r);o[0]=p;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:s,o[1]=i;for(var l=2;l<r;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},19948:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/common/csrf-token",id:"features/common/csrf-token",title:"csrf-token",description:"To create, update, and delete requests the SAP Cloud SDK will try to send a CSRF token.",source:"@site/docs-js/features/common/csrf-token.mdx",sourceDirName:"features/common",slug:"/features/common/csrf-token",permalink:"/cloud-sdk/docs/js/features/common/csrf-token",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/common/csrf-token.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"To create, update, and delete requests the SAP Cloud SDK will try to send a ",(0,s.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Cross-site_request_forgery#Cookie-to-header_token"},"CSRF token"),".\nUpon execution, the request will try to fetch a token first before issuing the create request.\nMany services require this behavior for security reasons.\nHowever, the create request will be made without a CSRF token if none could be obtained."))}c.isMDXComponent=!0},47975:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/common/custom-request-config-note",id:"features/common/custom-request-config-note",title:"custom-request-config-note",description:"To ensure API consistency, the SAP Cloud SDK does not allow overriding the following options:",source:"@site/docs-js/features/common/custom-request-config-note.mdx",sourceDirName:"features/common",slug:"/features/common/custom-request-config-note",permalink:"/cloud-sdk/docs/js/features/common/custom-request-config-note",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/common/custom-request-config-note.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("admonition",{type:"note"},(0,s.kt)("p",{parentName:"admonition"},"To ensure API consistency, the SAP Cloud SDK does not allow overriding the following options:"),(0,s.kt)("ul",{parentName:"admonition"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"method")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"url")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"baseURL")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"data")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"headers")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"params")))))}c.isMDXComponent=!0},31477:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/common/custom-request-config",id:"features/common/custom-request-config",title:"custom-request-config",description:"By default, the SAP Cloud SDK uses axios as an HTTP client for executing requests.",source:"@site/docs-js/features/common/custom-request-config.mdx",sourceDirName:"features/common",slug:"/features/common/custom-request-config",permalink:"/cloud-sdk/docs/js/features/common/custom-request-config",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/common/custom-request-config.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"By default, the SAP Cloud SDK uses ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/axios/axios"},"axios")," as an HTTP client for executing requests.\nThe SAP Cloud SDK derives and configures most request options including ",(0,s.kt)("inlineCode",{parentName:"p"},"url"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"headers"),", etc.\nYou can provide a custom request configuration to pass additional options to axios.\nThe example below demonstrates how to configure the response data type, typically used when downloading a file from an endpoint."))}c.isMDXComponent=!0},39173:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/common/execute-raw-overview",id:"features/common/execute-raw-overview",title:"execute-raw-overview",description:"In addition to the execute() method, you can execute a request using the executeRaw() method.",source:"@site/docs-js/features/common/execute-raw-overview.mdx",sourceDirName:"features/common",slug:"/features/common/execute-raw-overview",permalink:"/cloud-sdk/docs/js/features/common/execute-raw-overview",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/common/execute-raw-overview.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"In addition to the ",(0,s.kt)("inlineCode",{parentName:"p"},"execute()")," method, you can execute a request using the ",(0,s.kt)("inlineCode",{parentName:"p"},"executeRaw()")," method.\nIt returns an ",(0,s.kt)("inlineCode",{parentName:"p"},"HttpResponse")," instance, which contains the following properties:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"status"),": the status code of the response"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"headers"),": the response headers"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"data"),": the response body"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"request"),": the original request")))}c.isMDXComponent=!0},53396:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/common/execute-raw-use-cases",id:"features/common/execute-raw-use-cases",title:"execute-raw-use-cases",description:"Typical cases, where you might need to use the executeRaw() method are:",source:"@site/docs-js/features/common/execute-raw-use-cases.mdx",sourceDirName:"features/common",slug:"/features/common/execute-raw-use-cases",permalink:"/cloud-sdk/docs/js/features/common/execute-raw-use-cases",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/common/execute-raw-use-cases.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Typical cases, where you might need to use the ",(0,s.kt)("inlineCode",{parentName:"p"},"executeRaw()")," method are:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"You need additional information about the response, like the status code or response headers."),(0,s.kt)("li",{parentName:"ul"},"You need additional information about the request, like payload, method, or request headers."),(0,s.kt)("li",{parentName:"ul"},"The ",(0,s.kt)("inlineCode",{parentName:"li"},"execute()")," method is omitted in some request builders because the response data cannot be deserialized by the request builder."),(0,s.kt)("li",{parentName:"ul"},"Debugging purposes.")))}c.isMDXComponent=!0},95271:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/common/skip-csrf-token",id:"features/common/skip-csrf-token",title:"skip-csrf-token",description:"For some services, the CSRF token is not required even for non-GET requests.",source:"@site/docs-js/features/common/skip-csrf-token.mdx",sourceDirName:"features/common",slug:"/features/common/skip-csrf-token",permalink:"/cloud-sdk/docs/js/features/common/skip-csrf-token",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/common/skip-csrf-token.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"For some services, the ",(0,s.kt)("inlineCode",{parentName:"p"},"CSRF")," token is not required even for non-",(0,s.kt)("inlineCode",{parentName:"p"},"GET")," requests.\nTherefore, skipping to fetch the ",(0,s.kt)("inlineCode",{parentName:"p"},"CSRF")," token makes sense as a performance improvement.\nYou can disable the ",(0,s.kt)("inlineCode",{parentName:"p"},"CSRF")," token request by using the ",(0,s.kt)("inlineCode",{parentName:"p"},"skipCsrfTokenFetching()")," method like below:"))}c.isMDXComponent=!0},89465:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/common/batch/batch-intro",id:"features/odata/common/batch/batch-intro",title:"batch-intro",description:"OData batch requests combine multiple operations into one POST operation, allowing you to execute multiple requests with just one network call.",source:"@site/docs-js/features/odata/common/batch/batch-intro.mdx",sourceDirName:"features/odata/common/batch",slug:"/features/odata/common/batch/batch-intro",permalink:"/cloud-sdk/docs/js/features/odata/common/batch/batch-intro",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/common/batch/batch-intro.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"OData batch requests combine multiple operations into one ",(0,s.kt)("inlineCode",{parentName:"p"},"POST")," operation, allowing you to execute multiple requests with just one network call.\nThis can significantly reduce the network overhead you have to deal with when you want to execute many requests."),(0,s.kt)("p",null,"Every SAP Cloud SDK client provides a ",(0,s.kt)("inlineCode",{parentName:"p"},"batch()")," function that takes ",(0,s.kt)("a",{parentName:"p",href:"#retrieve-request"},"retrieve requests")," and ",(0,s.kt)("a",{parentName:"p",href:"#changeset"},"changesets"),".\nYou can combine those arbitrarily.\nTo execute batch requests, use the ",(0,s.kt)("inlineCode",{parentName:"p"},"execute()")," method - it works the same way as for single requests."),(0,s.kt)("p",null,"The response of a ",(0,s.kt)("inlineCode",{parentName:"p"},"batch")," request is a list of ",(0,s.kt)("inlineCode",{parentName:"p"},"BatchResponse")," instances.\nEach of the items in the response is either a ",(0,s.kt)("inlineCode",{parentName:"p"},"ReadResponse"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"WriteResponses")," or an ",(0,s.kt)("inlineCode",{parentName:"p"},"ErrorResponse"),", see ",(0,s.kt)("a",{parentName:"p",href:"#responses"},"Responses"),"."))}c.isMDXComponent=!0},13588:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/common/batch/changeset",id:"features/odata/common/batch/changeset",title:"changeset",description:"The order of execution within a changeset is not defined.",source:"@site/docs-js/features/odata/common/batch/changeset.mdx",sourceDirName:"features/odata/common/batch",slug:"/features/odata/common/batch/changeset",permalink:"/cloud-sdk/docs/js/features/odata/common/batch/changeset",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/common/batch/changeset.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"The order of execution within a changeset is not defined.\nThis differs from the whole batch request itself, where the order is defined.\nTherefore, the requests within one changeset should not depend on each other.\nIf the execution of any request within a changeset fails, the whole changeset will be reflected as an error in the response.\nThe changeset will not be applied, much like a database transaction."),(0,s.kt)("p",null,"Unlike retrieve requests, you can not pass change requests to the ",(0,s.kt)("inlineCode",{parentName:"p"},"batch()")," function directly.\nYou have to wrap them with the ",(0,s.kt)("inlineCode",{parentName:"p"},"changeset()")," function, which in turn can be passed to the ",(0,s.kt)("inlineCode",{parentName:"p"},"batch()")," function.\nOnce a batch request is executed, it returns a list of ",(0,s.kt)("a",{parentName:"p",href:"#responses"},(0,s.kt)("inlineCode",{parentName:"a"},"BatchResponse"))," objects."),(0,s.kt)("p",null,"If a changeset was executed successfully, its corresponding response is of type ",(0,s.kt)("inlineCode",{parentName:"p"},"WriteResponses")," and contains a collection of all raw responses to the requests in the changeset.\nIf the execution fails, the response is an ",(0,s.kt)("inlineCode",{parentName:"p"},"ErrorResponse")," instance."),(0,s.kt)("p",null,"In the example below, you create a list of ",(0,s.kt)("a",{parentName:"p",href:"#update-request-builder"},(0,s.kt)("inlineCode",{parentName:"a"},"UpdateRequestBuilder")," instances")," from a list of addresses.\nCombine these change requests into one changeset and pass it to the batch request, which you execute against a destination."),(0,s.kt)("p",null,"Once you execute the batch request, you get a list of ",(0,s.kt)("inlineCode",{parentName:"p"},"BatchResponse")," instances, which in this example contains one response only, i.e. the one for the changeset."))}c.isMDXComponent=!0},41974:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/common/batch/combining-requests",id:"features/odata/common/batch/combining-requests",title:"combining-requests",description:"You can combine requests within a batch request as you like.",source:"@site/docs-js/features/odata/common/batch/combining-requests.mdx",sourceDirName:"features/odata/common/batch",slug:"/features/odata/common/batch/combining-requests",permalink:"/cloud-sdk/docs/js/features/odata/common/batch/combining-requests",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/common/batch/combining-requests.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"You can combine requests within a ",(0,s.kt)("inlineCode",{parentName:"p"},"batch")," request as you like.\nIn the example below, you combine create requests, update requests, and get requests into one ",(0,s.kt)("inlineCode",{parentName:"p"},"batch")," request.\nRemember, that change requests have to be wrapped in a ",(0,s.kt)("inlineCode",{parentName:"p"},"changeset()")," function.\nPut the create requests into one changeset and combine the update and delete requests into another.\nThe ",(0,s.kt)("inlineCode",{parentName:"p"},"GET")," requests are added to the ",(0,s.kt)("inlineCode",{parentName:"p"},"batch")," request directly without wrapping."),(0,s.kt)("p",null,"Once the batch request is executed the response will be an array of sub-responses to the specific changeset and retrieve requests in the order that was given in the request.\nNote, that the sub-responses of a ",(0,s.kt)("a",{parentName:"p",href:"#changeset"},"changeset")," don't have to be in order."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"async function executeComplexBatch(\n  createAddressRequests: CreateRequestBuilder<BusinessPartnerAddress>[],\n  updateAddressRequests: UpdateRequestBuilder<BusinessPartnerAddress>[],\n  deleteAddressRequests: DeleteRequestBuilder<BusinessPartnerAddress>[],\n  getAddressByIdRequests: GetByKeyRequestBuilder<BusinessPartnerAddress>[]\n) {\n  // Execute batch request\n  const [\n    createAddressesResponse,\n    updateAndDeleteAddressesResponse,\n    ...getAddressesByIdResponses\n  ] = await batch(\n    changeset(...createAddressRequests),\n    changeset(...updateAddressRequests, ...deleteAddressRequests),\n    ...getAddressByIdRequests\n  ).execute(destination);\n\n  // Do something with responses\n}\n")))}c.isMDXComponent=!0},43277:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/common/batch/configure-serialization",id:"features/odata/common/batch/configure-serialization",title:"configure-serialization",description:"By default, URLs in the multipart representation of a request are serialized to a path relative to the service, e.g.:",source:"@site/docs-js/features/odata/common/batch/configure-serialization.mdx",sourceDirName:"features/odata/common/batch",slug:"/features/odata/common/batch/configure-serialization",permalink:"/cloud-sdk/docs/js/features/odata/common/batch/configure-serialization",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/common/batch/configure-serialization.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"By default, URLs in the multipart representation of a request are serialized to a path relative to the service, e.g.:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"GET /sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartnerAddress HTTP/1.1\n")),(0,s.kt)("p",null,"However, some services might only understand URLs relative to the entity or even absolute URLs."),(0,s.kt)("p",null,"To configure the serialization of the URLs within a batch request, you can set the subrequest path type with the ",(0,s.kt)("inlineCode",{parentName:"p"},"withSubRequestPathType()")," method.\nYou can either set it to ",(0,s.kt)("inlineCode",{parentName:"p"},"relativeToService")," (default), which will yield URLs relative to the entity, or ",(0,s.kt)("inlineCode",{parentName:"p"},"absolute"),", which will produce absolute URLs.\nSee below for examples:"),(0,s.kt)("p",null,"Serialize subrequest path relative to entity:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"// GET /A_BusinessPartnerAddress HTTP/1.1\nbatch(...requests).withSubRequestPathType('relativeToEntity');\n")),(0,s.kt)("p",null,"Serialize subrequest path as absolute URL:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"// GET https://my-s4.system.com/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartnerAddress HTTP/1.1\nbatch(...requests).withSubRequestPathType('absolute');\n")))}c.isMDXComponent=!0},87985:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/common/batch/responses",id:"features/odata/common/batch/responses",title:"responses",description:"Once a batch request is executed, it returns a list of BatchResponse objects.",source:"@site/docs-js/features/odata/common/batch/responses.mdx",sourceDirName:"features/odata/common/batch",slug:"/features/odata/common/batch/responses",permalink:"/cloud-sdk/docs/js/features/odata/common/batch/responses",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/common/batch/responses.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[{value:"<code>ReadResponse</code>",id:"readresponse",level:3},{value:"<code>WriteResponses</code>",id:"writeresponses",level:3},{value:"<code>ErrorResponse</code>",id:"errorresponse",level:3}],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Once a ",(0,s.kt)("inlineCode",{parentName:"p"},"batch")," request is executed, it returns a list of ",(0,s.kt)("inlineCode",{parentName:"p"},"BatchResponse")," objects.\nThe responses correspond to the retrieve requests and changesets in the same order that they were passed to the ",(0,s.kt)("inlineCode",{parentName:"p"},"batch()")," function.\nRequests that were not successful are reflected as a list of ",(0,s.kt)("inlineCode",{parentName:"p"},"ErrorResponse")," objects.\nResponses to successful requests are represented as ",(0,s.kt)("inlineCode",{parentName:"p"},"ReadResponse")," instances for retrieve requests, and ",(0,s.kt)("inlineCode",{parentName:"p"},"WriteResponses")," for changesets."),(0,s.kt)("p",null,"To determine the type of a response, you can use the following type guards:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"isSuccess()"),": to check that the response is either a ",(0,s.kt)("inlineCode",{parentName:"li"},"ReadResponse")," or ",(0,s.kt)("inlineCode",{parentName:"li"},"WriteResponses")," instance"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"isError()"),": to check that the response is an ",(0,s.kt)("inlineCode",{parentName:"li"},"ErrorResponse")," instance"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"isReadResponse()"),": to check that the response is a ",(0,s.kt)("inlineCode",{parentName:"li"},"ReadResponse")," instance"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"isWriteResponses()"),": to check that the response is a ",(0,s.kt)("inlineCode",{parentName:"li"},"WriteResponses")," instance")),(0,s.kt)("p",null,"Then, depending on the corresponding request, you can parse the response or handle the error."),(0,s.kt)("h3",{id:"readresponse"},(0,s.kt)("inlineCode",{parentName:"h3"},"ReadResponse")),(0,s.kt)("p",null,"Successful retrieve requests have the type ",(0,s.kt)("inlineCode",{parentName:"p"},"ReadResponse"),", which contains the HTTP code, the raw body, and the constructor of the entity that was parsed from the response.\nTo work with an instance of the retrieved entity, you can use the ",(0,s.kt)("inlineCode",{parentName:"p"},"as()")," method, which allows you to transform the raw data into an instance of an entity represented by the given entity API.\nNote, that the ",(0,s.kt)("inlineCode",{parentName:"p"},"as()")," method transforms the raw data to an array of entities, even if the original request was a ",(0,s.kt)("inlineCode",{parentName:"p"},"GetByKeyRequestBuilder"),"."),(0,s.kt)("p",null,"In the example below, you combine a list of ",(0,s.kt)("inlineCode",{parentName:"p"},"GetByKeyRequestBuilder")," instances into one ",(0,s.kt)("inlineCode",{parentName:"p"},"batch")," request and execute it against a destination.\nIf one of the requests was unsuccessful, an error will be thrown.\nOtherwise, the responses are transformed into instances of ",(0,s.kt)("inlineCode",{parentName:"p"},"BusinessPartnerAddress"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"// Destructure business partner service\nconst { batch, businessPartnerAddressApi } = businessPartnerService();\n\nasync function getAddressesByIds(\n  ...retrieveRequests: GetByKeyRequestBuilder<BusinessPartnerAddress>[]\n): Promise<BusinessPartnerAddress[]> {\n  // Execute batch request combining multiple retrieve requests\n  const batchResponses = await batch(...retrieveRequests).execute(destination);\n\n  // Error handling\n  if (batchResponses.some(response => !response.isSuccess())) {\n    throw new Error('Some of the batch subrequests were not successful.');\n  }\n\n  return batchResponses.reduce(\n    (addresses: BusinessPartnerAddress[], response: BatchResponse) => {\n      if (response.isReadResponse()) {\n        // Transform response to an instance of BusinessPartnerAddress\n        const [address] = response.as(businessPartnerAddressApi);\n        addresses.push(address);\n      }\n      return addresses;\n    },\n    []\n  );\n}\n")),(0,s.kt)("p",null,"Function imports using ",(0,s.kt)("inlineCode",{parentName:"p"},"GET")," operation are part of the retrieve requests as well.\nAs function imports are not entity based, you obtain the response using the ",(0,s.kt)("inlineCode",{parentName:"p"},"responseTransformer()")," method, which is part of the ",(0,s.kt)("inlineCode",{parentName:"p"},"FunctionImportRequestBuilder"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const {\n  operations: { getPdf }\n} = billingDocumentService();\n\nasync function batchExample(billingDocument: string) {\n  const request = getPdf({ billingDocument });\n  const [response] = await batch(request).execute(destination);\n  if (response.isReadResponse()) {\n    const parsedResponse = request.responseTransformer(response.body);\n  }\n}\n")),(0,s.kt)("h3",{id:"writeresponses"},(0,s.kt)("inlineCode",{parentName:"h3"},"WriteResponses")),(0,s.kt)("p",null,"Successful changeset requests can be cast to type ",(0,s.kt)("inlineCode",{parentName:"p"},"WriteResponses")," which contains all subresponses for the changeset request.\nThose responses can be accessed with the ",(0,s.kt)("inlineCode",{parentName:"p"},"responses")," property and have the type ",(0,s.kt)("inlineCode",{parentName:"p"},"WriteResponse"),".\nEach ",(0,s.kt)("inlineCode",{parentName:"p"},"WriteResponse")," instance contains the HTTP code and can contain the raw body and the constructor of the entity that was parsed from the response, depending on whether there was a body in the response.\nCreate and delete requests typically do not have a response body.\nTo work with an instance of an entity given in a ",(0,s.kt)("inlineCode",{parentName:"p"},"WriteResponse"),", you can use the ",(0,s.kt)("inlineCode",{parentName:"p"},"as()")," method, which allows you to transform the raw string body into an instance of the given constructor.\nNote that the response may not exist, so you should only call this method if you know that there is data.\nTypically the HTTP code is a good indicator for this - ",(0,s.kt)("inlineCode",{parentName:"p"},"201 No Content")," probably won't have content."),(0,s.kt)("p",null,"If you are working with TypeScript, you will have to tell the compiler that the ",(0,s.kt)("inlineCode",{parentName:"p"},"as!()")," method can be used here by adding a ",(0,s.kt)("inlineCode",{parentName:"p"},"!"),".\nAlso note, that the response to a changeset can be an ",(0,s.kt)("inlineCode",{parentName:"p"},"ErrorResponse"),".\nTherefore, it is crucial to check responses for success, before casting them to ",(0,s.kt)("inlineCode",{parentName:"p"},"WriteResponses"),"."),(0,s.kt)("p",null,"In the example below, you combine a list of ",(0,s.kt)("inlineCode",{parentName:"p"},"UpdateRequestBuilder")," instances into one changeset and pass it to the batch request.\nOnce you execute the batch request, you get a list which contains one ",(0,s.kt)("inlineCode",{parentName:"p"},"BatchResponse")," object only."),(0,s.kt)("p",null,"If the request was unsuccessful, an error will be thrown.\nOtherwise, the subresponses are transformed into instances of ",(0,s.kt)("inlineCode",{parentName:"p"},"BusinessPartnerAddress"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"// Destructure business partner service\nconst { batch, changeset } = businessPartnerService();\n\nasync function updateAddresses(\n  ...updateRequests: UpdateRequestBuilder<BusinessPartnerAddress>\n): Promise<BusinessPartnerAddress[]> {\n  // Execute batch request with one changeset\n  const batchResponses = await batch(\n    // Combine update requests into one changeset\n    changeset(...updateRequests)\n  ).execute(destination);\n\n  // Get response for the changeset request\n  const changesetResponse = batchResponses[0];\n\n  if (changesetResponse.isWriteResponses()) {\n    return changesetResponse.responses.map(response =>\n      // Transform response to an instance of BusinessPartnerAddress\n      response.as!(BusinessPartnerAddress)\n    );\n  }\n\n  // Error handling\n  throw new Error('The changeset request was not successful.');\n}\n")),(0,s.kt)("p",null,"As discussed for the ",(0,s.kt)("a",{parentName:"p",href:"#readresponse"},"read response")," you have to use the ",(0,s.kt)("inlineCode",{parentName:"p"},"responseTransformer()")," method for write responses related to function or action imports."),(0,s.kt)("h3",{id:"errorresponse"},(0,s.kt)("inlineCode",{parentName:"h3"},"ErrorResponse")),(0,s.kt)("p",null,"Unsuccessful retrieve requests and changesets are reflected as ",(0,s.kt)("inlineCode",{parentName:"p"},"ErrorResponse")," instances in the response.\nThose responses have an ",(0,s.kt)("inlineCode",{parentName:"p"},"httpCode")," (a number) and a ",(0,s.kt)("inlineCode",{parentName:"p"},"body")," (a JSON object)."))}c.isMDXComponent=!0},45480:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/common/batch/retrieve-request",id:"features/odata/common/batch/retrieve-request",title:"retrieve-request",description:"You can pass retrieve requests directly to the batch() function.",source:"@site/docs-js/features/odata/common/batch/retrieve-request.mdx",sourceDirName:"features/odata/common/batch",slug:"/features/odata/common/batch/retrieve-request",permalink:"/cloud-sdk/docs/js/features/odata/common/batch/retrieve-request",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/common/batch/retrieve-request.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"You can pass retrieve requests directly to the ",(0,s.kt)("inlineCode",{parentName:"p"},"batch()")," function.\nOnce you execute a batch request you get a list of ",(0,s.kt)("a",{parentName:"p",href:"#responses"},(0,s.kt)("inlineCode",{parentName:"a"},"BatchResponse")),".\nA ",(0,s.kt)("inlineCode",{parentName:"p"},"BatchResponse")," that corresponds with a retrieve request can either be a ",(0,s.kt)("inlineCode",{parentName:"p"},"ReadResponse")," or an ",(0,s.kt)("inlineCode",{parentName:"p"},"ErrorResponse"),"."),(0,s.kt)("p",null,"In the example below, you map each given address ID to a ",(0,s.kt)("a",{parentName:"p",href:"#getbykey-request-builder"},(0,s.kt)("inlineCode",{parentName:"a"},"GetByKeyRequestBuilder")),".\nThese retrieve requests are combined into one batch request and executed against a destination."),(0,s.kt)("p",null,"The example below is based on the ",(0,s.kt)("a",{parentName:"p",href:"https://api.sap.com/api/OP_API_BILLING_DOCUMENT_SRV_0001/overview"},"Bills of Material service"),", which contains a function import called ",(0,s.kt)("inlineCode",{parentName:"p"},"getPdf()"),".\nThis service is an OData v2 service, but the syntax is the same for OData v2 and v4."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const {\n  billingDocumentApi,\n  operations: { getPdf }\n} = billingDocumentService();\n\nasync function batchExample(documentIds: string[]) {\n  const getByKeyRequests = documentIds.map(billingDocument =>\n    billingDocumentApi.requestBuilder().getByKey(billingDocument)\n  );\n  const functionImportRequests = documentIds.map(billingDocument =>\n    getPdf({ billingDocument })\n  );\n\n  // Execute batch request combining multiple retrieve requests\n  const batchResponses = await batch(\n    ...getByKeyRequests,\n    ...functionImportRequests\n  );\n}\n")))}c.isMDXComponent=!0},33762:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/common/batch/serialization",id:"features/odata/common/batch/serialization",title:"serialization",description:"By default, when you execute a batch request, the subrequests are serialized to a multipart representation of the request, which is essentially a string.",source:"@site/docs-js/features/odata/common/batch/serialization.mdx",sourceDirName:"features/odata/common/batch",slug:"/features/odata/common/batch/serialization",permalink:"/cloud-sdk/docs/js/features/odata/common/batch/serialization",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/common/batch/serialization.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"By default, when you execute a batch request, the subrequests are serialized to a multipart representation of the request, which is essentially a string.\nThis is what a create request for a business partner addresses would serialize to:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'Content-Type: application/http\nContent-Transfer-Encoding: binary\n\nPOST /sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartnerAddress HTTP/1.1\nContent-Type: application/json\nAccept: application/json\n\n{"BusinessPartner":"1","PostalCode":"10001","City":"New York","Country":"USA"}\n\n')),(0,s.kt)("p",null,'The first lines are request headers for the multipart request, followed by a blank line.\nThe next line contains the request method and URL, followed by the request headers, a blank line, and the request payload.\nEvery "atomic" request is serialized to a string of this kind, while ',(0,s.kt)("inlineCode",{parentName:"p"},"GET")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"DELETE")," requests do not provide a payload."))}c.isMDXComponent=!0},46890:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/common/custom-csrf-token",id:"features/odata/common/custom-csrf-token",title:"custom-csrf-token",description:"- Disable the token fetching to deactivate the default code",source:"@site/docs-js/features/odata/common/custom-csrf-token.mdx",sourceDirName:"features/odata/common",slug:"/features/odata/common/custom-csrf-token",permalink:"/cloud-sdk/docs/js/features/odata/common/custom-csrf-token",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/common/custom-csrf-token.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Disable the token fetching to deactivate the default code"),(0,s.kt)("li",{parentName:"ul"},"Add a middleware to include your custom token fetching.")),(0,s.kt)("p",null,"The SAP Cloud SDK offers a ",(0,s.kt)("inlineCode",{parentName:"p"},"csrf")," middleware which allows to configure some basic options:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"method")," The HTTP method used to get a token"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"URL")," The URL which is called to retrieve a token"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"middleware")," Middlewares used for the token retrieval request")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const { businessPartnerApi } = businessPartnerService();\nbusinessPartnerApi\n  .requestBuilder()\n  .update(businessPartner)\n  .middleware([csrf({ url: 'https://example.com/csrf/token/url' })])\n  .skipCsrfTokenFetching();\n")))}c.isMDXComponent=!0},90704:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/common/entity/custom-de-serializers",id:"features/odata/common/entity/custom-de-serializers",title:"custom-de-serializers",description:"Since version 2 of the SAP Cloud SDK you can customize how the data you get from a service is deserialized and serialize when sending it back to the service.",source:"@site/docs-js/features/odata/common/entity/custom-de-serializers.mdx",sourceDirName:"features/odata/common/entity",slug:"/features/odata/common/entity/custom-de-serializers",permalink:"/cloud-sdk/docs/js/features/odata/common/entity/custom-de-serializers",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/common/entity/custom-de-serializers.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[{value:"Using (De-)Serializers for Temporal",id:"using-de-serializers-for-temporal",level:4}],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Since version 2 of the SAP Cloud SDK you can customize how the data you get from a service is ",(0,s.kt)("em",{parentName:"p"},"deserialized")," and ",(0,s.kt)("em",{parentName:"p"},"serialize")," when sending it back to the service."),(0,s.kt)("p",null,"To influence (de-)serialization you have to provide your custom (de-)serializers to a service."),(0,s.kt)("p",null,"A (de-)serializer is an object of type ",(0,s.kt)("inlineCode",{parentName:"p"},"DeSerializer")," that defines the following callback functions:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"deserialize()"),": Takes a value as given by the service and returns a deserialized value, i.e. its represenation in code."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"serialize()"),": Takes a deserialized value and transforms it to the format and type expected by the service."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"serializeToUri()")," (optional): For some EDM types the serialized format differs between values in a payload and URI.\nThis function takes a deserialized value and transforms it to a string with the format expected by the service for URIs.\nThe second parameter of this callback function references the ",(0,s.kt)("inlineCode",{parentName:"li"},"serialize()")," function, which can optionally be used as a basis for URI serialization.\nIf this function is not specified, the URI serialization defaults to the ",(0,s.kt)("inlineCode",{parentName:"li"},"serialize()")," function.")),(0,s.kt)("p",null,"The type ",(0,s.kt)("inlineCode",{parentName:"p"},"DeSerializer")," has one generic parameter, that represents the deserialized type."),(0,s.kt)("p",null,"Example:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const doubleDeSerializer: DeSerializer<number> = {\n  deserialize: (val: string) => Number(val),\n  serialize: (val: number) => val.toString(),\n  serializeToUri: (value, serialize) => `${serialize(value)}D`\n};\n")),(0,s.kt)("p",null,"The example above shows a simplified version of the SAP Cloud SDK default (de-)serializer for the EDM type ",(0,s.kt)("inlineCode",{parentName:"p"},"Edm.Double"),":"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"The ",(0,s.kt)("inlineCode",{parentName:"li"},"deserialize()")," function converts the raw value to a number."),(0,s.kt)("li",{parentName:"ul"},"The ",(0,s.kt)("inlineCode",{parentName:"li"},"serialize()")," function converts the deserialized value to a string."),(0,s.kt)("li",{parentName:"ul"},"The ",(0,s.kt)("inlineCode",{parentName:"li"},"serializeToUri()")," function makes use of the ",(0,s.kt)("inlineCode",{parentName:"li"},"serialize()")," function and appends a ",(0,s.kt)("inlineCode",{parentName:"li"},"D")," at the end of the string.")),(0,s.kt)("p",null,"To specify custom (de-)serializers for a service, you have to pass an object to the service function, that maps from EDM type(s) to your custom (de-)serializer.\nAll unspecified EDM types are still (de-)serialized using the SAP Cloud SDK defaults."),(0,s.kt)("p",null,"Example, using the above ",(0,s.kt)("inlineCode",{parentName:"p"},"doubleDeSerializer")," for the business partner service:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const customDeSerializers = { 'Edm.Double': doubleDeSerializer };\nconst { businessPartnerApi } = businessPartnerService(customDeSerializers);\n")),(0,s.kt)("p",null,"All requests against the ",(0,s.kt)("inlineCode",{parentName:"p"},"businessPartnerApi")," will now use the custom (de-)serializers for ",(0,s.kt)("inlineCode",{parentName:"p"},"Edm.Double")," and the default (de-)serializers for all other EDM types."),(0,s.kt)("h4",{id:"using-de-serializers-for-temporal"},"Using (De-)Serializers for Temporal"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://tc39.es/proposal-temporal/docs/"},"Temporal")," is a stage 3 proposal for a date/time API in ECMAScript.\nAt the time, there is polyfill available, but it is not recommended for productive use.\nOnce it is recommended for productive use, the SAP Cloud SDK will adapt it as the default over Moment.js.\nTemporal-based (de-)serializers for the SAP Cloud SDK are available as a separate npm package, ",(0,s.kt)("inlineCode",{parentName:"p"},"@sap-cloud-sdk/temporal-de-serializers"),"."),(0,s.kt)("p",null,"Adapt your code to use this package, for example:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"import { temporalDeSerializersV2 } from '@sap-cloud-sdk/temporal-de-serializers';\nconst { businessPartnerApi } = businessPartnerService(temporalDeSerializersV2);\n\nbusinessPartnerApi\n  .entityBuilder()\n  .organizationFoundationDate(\n    Temporal.PlainDateTime.from('1995-12-07T03:24:30')\n  )\n  .build();\n")))}c.isMDXComponent=!0},30504:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/common/entity/custom-fields",id:"features/odata/common/entity/custom-fields",title:"custom-fields",description:"In the real world, OData service implementations can differ from their original service specifications.",source:"@site/docs-js/features/odata/common/entity/custom-fields.mdx",sourceDirName:"features/odata/common/entity",slug:"/features/odata/common/entity/custom-fields",permalink:"/cloud-sdk/docs/js/features/odata/common/entity/custom-fields",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/common/entity/custom-fields.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"In the real world, OData service implementations can differ from their original service specifications.\nThis can happen due to incorrect specifications or customizations of the service.\nThe SAP Cloud SDK supports custom fields on your entities, that are not covered by the specification the according service is based on."),(0,s.kt)("p",null,"You can set custom fields on an entity through the ",(0,s.kt)("inlineCode",{parentName:"p"},"setCustomFields()")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"setCustomField()")," methods.\nSetting custom fields with existing keys overrides the existing fields.\nNon-existent fields are added without removing other fields."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"// add custom fields to the existing fields\nbusinessPartner.setCustomFields({\n  myCustomField: 'this is custom'\n});\n\n// add specific custom field\nbusinessPartner.setCustomField('myCustomField', 'this is custom');\n")),(0,s.kt)("p",null,"You can also access existing fields using the ",(0,s.kt)("inlineCode",{parentName:"p"},"getCustomField()")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"getCustomFields()")," methods."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"// get all custom fields\nconst customFields = businessPartner.getCustomFields(); // { myCustomField: 'this is custom' }\n\n// get specific custom field\nconst customFields: = businessPartner.getCustomField(); // 'this is custom'\n")),(0,s.kt)("admonition",{title:"Custom fields are not serialized or deserialized",type:"note"},(0,s.kt)("p",{parentName:"admonition"},"As custom fields are not defined through the service specification, the type of their values is unknown.\nTherefore, custom fields are never automatically serialized or deserialized.\nIf you are using custom fields, you might have to take care of serialization on your own.")))}c.isMDXComponent=!0},30453:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/common/entity/deserialize-entity",id:"features/odata/common/entity/deserialize-entity",title:"deserialize-entity",description:"In some cases you might retrieve raw data from an OData response.",source:"@site/docs-js/features/odata/common/entity/deserialize-entity.mdx",sourceDirName:"features/odata/common/entity",slug:"/features/odata/common/entity/deserialize-entity",permalink:"/cloud-sdk/docs/js/features/odata/common/entity/deserialize-entity",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/common/entity/deserialize-entity.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"In some cases you might retrieve raw data from an OData response.\nIf you need to transform it to an SAP Cloud SDK representation of an entity, you can deserialize it using the ",(0,s.kt)("inlineCode",{parentName:"p"},"deserializeEntity()")," method.\nFields unknown according to the specification are added as custom fields, without deserializing the according value.\nNote that this function is not part of a specific service and has to be imported from the SAP Cloud SDK ",(0,s.kt)("inlineCode",{parentName:"p"},"odata-v2")," or ",(0,s.kt)("inlineCode",{parentName:"p"},"odata-v4")," package."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"import {\n  defaultDeSerializers,\n  entityDeserializer\n} from '@sap-cloud-sdk/odata-v2';\nimport { businessPartnerService } from './generated/business-partner-service';\n\nconst { businessPartnerApi } = businessPartnerService();\nconst originalEntity = {\n  FirstName: 'Peter',\n  LastName: 'Pan',\n  to_BusinessPartnerAddress: [\n    {\n      Country: 'Neverland'\n    }\n  ]\n};\n\nconst deserializedEntity = entityDeserializer(\n  defaultDeSerializers\n).deserializeEntity(originalEntity, businessPartnerApi);\n")))}c.isMDXComponent=!0},50840:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/common/entity/entity-builder",id:"features/odata/common/entity/entity-builder",title:"entity-builder",description:"The API class provides an entity builder with the entityBuilder() method.",source:"@site/docs-js/features/odata/common/entity/entity-builder.mdx",sourceDirName:"features/odata/common/entity",slug:"/features/odata/common/entity/entity-builder",permalink:"/cloud-sdk/docs/js/features/odata/common/entity/entity-builder",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/common/entity/entity-builder.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"The API class provides an entity builder with the ",(0,s.kt)("inlineCode",{parentName:"p"},"entityBuilder()")," method.\nYou can set the properties using a fluent API.\nThe ",(0,s.kt)("inlineCode",{parentName:"p"},"build()")," method will return the new entity."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"import { businessPartnerService } from './generated/business-partner-service';\n\nconst { businessPartnerApi, businessPartnerAddressApi } =\n  businessPartnerService();\n\nbusinessPartnerApi.entityBuilder().firstName('Peter').lastName('Pan').build();\n")),(0,s.kt)("p",null,"You can create navigation properties that link to other entities using their respective builders.\nNavigation properties with a one-to-many relation require an array of entities as a parameter.\nThis also applies if the array only contains one entity."),(0,s.kt)("p",null,"The relation to the business partner address is a one-to-many relation here."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"import { businessPartnerService } from './generated/business-partner-service';\n\nconst { businessPartnerApi, businessPartnerAddressApi } =\n  businessPartnerService();\n\nbusinessPartnerApi\n  .entityBuilder()\n  .firstName('Peter')\n  .lastName('Pan')\n  .toBusinessPartnerAddress([\n    businessPartnerAddressApi.entityBuilder().country('Neverland').build()\n  ])\n  .build();\n")),(0,s.kt)("p",null,"You can also add fields that are unknown according to the specification, if you add them as custom fields.\nTo achieve this, pass an object to the ",(0,s.kt)("inlineCode",{parentName:"p"},"withCustomFields()")," method.\nThe keys of the object represent the names of the custom fields and the values their respective values."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"import { businessPartnerService } from './generated/business-partner-service';\n\nconst { businessPartnerApi } = businessPartnerService();\n\nbusinessPartnerApi\n  .entityBuilder()\n  .firstName('Peter')\n  .withCustomFields({\n    myCustomField: 'this is custom'\n  })\n  .build();\n")))}c.isMDXComponent=!0},96465:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/common/entity/entity",id:"features/odata/common/entity/entity",title:"entity",description:"In OData, entity collections are the resource against which you execute requests and CRUD operations.",source:"@site/docs-js/features/odata/common/entity/entity.mdx",sourceDirName:"features/odata/common/entity",slug:"/features/odata/common/entity/",permalink:"/cloud-sdk/docs/js/features/odata/common/entity/",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/common/entity/entity.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"In OData, entity collections are the resource against which you execute requests and CRUD operations.\nThe SAP Cloud SDK operates on entity classes, that represent those resources."),(0,s.kt)("p",null,"An OData JSON representation of a single business partner could be something like this:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "FirstName": "Peter",\n  "LastName": "Pan",\n  "to_BusinessPartnerAddress": [\n    {\n      "Country": "Neverland"\n    }\n  ]\n}\n')),(0,s.kt)("p",null,"When using the SAP Cloud SDK this entity would be represented as an instance of the ",(0,s.kt)("inlineCode",{parentName:"p"},"BusinessPartner")," entity class from the according business partner service.\nThe properties of entity class instances are held in camel case as is common in JavaScript:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"BusinessPartner {\n  firstName: 'Peter',\n  lastName: 'Pan',\n  toBusinessPartnerAddress: [ BusinessPartnerAddress { country: 'Neverland' } ]\n}\n")),(0,s.kt)("p",null,"OData responses, that contain entities are automatically deserialized to the respective entity class when using the SAP Cloud SDK.\nTo execute create or update requests you have to build an instance of an entity class, that represents the data to be created or updated.\nThere are three ways to build entities on your own as described below."))}c.isMDXComponent=!0},66958:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/common/entity/from-json",id:"features/odata/common/entity/from-json",title:"from-json",description:"Sometimes, it makes sense for you to store your data as a JSON object, that is based on the entity type.",source:"@site/docs-js/features/odata/common/entity/from-json.mdx",sourceDirName:"features/odata/common/entity",slug:"/features/odata/common/entity/from-json",permalink:"/cloud-sdk/docs/js/features/odata/common/entity/from-json",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/common/entity/from-json.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Sometimes, it makes sense for you to store your data as a JSON object, that is based on the entity type.\nFor example, when using the property names of the entity class as properties of your object.\nIf you are looking for a way to create an entity from a JSON response, that you got from an OData service, you are probably looking for ",(0,s.kt)("a",{parentName:"p",href:"#deserialize-an-odata-json-response-to-an-entity"},"entity deserialization"),"."),(0,s.kt)("p",null,"This would be the JSON representation of a business partner in the SAP Cloud SDK:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "firstName": "Peter",\n  "lastName": "Pan",\n  "toBusinessPartnerAddress": [\n    {\n      "country": "Neverland"\n    }\n  ]\n}\n')),(0,s.kt)("p",null,"You can use this data to build an entity using the ",(0,s.kt)("inlineCode",{parentName:"p"},"fromJson()")," method.\nThe example below shows how you would create an instance of the business partner class using the ",(0,s.kt)("inlineCode",{parentName:"p"},"fromJson()")," method."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"import { businessPartnerService } from './generated/business-partner-service';\n\nconst { businessPartnerApi } = businessPartnerService();\nconst businessPartner = businessPartnerApi.entityBuilder().fromJson({\n  firstName: 'Peter',\n  lastName: 'Pan',\n  toBusinessPartnerAddress: [\n    {\n      country: 'Neverland'\n    }\n  ]\n});\n")),(0,s.kt)("p",null,"If there are unknown fields present in the JSON object, they will be treated as custom fields."))}c.isMDXComponent=!0},33964:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/common/etag",id:"features/odata/common/etag",title:"etag",description:"An ETag is a version identifier that is often used to implement an optimistic locking mechanism.",source:"@site/docs-js/features/odata/common/etag.mdx",sourceDirName:"features/odata/common",slug:"/features/odata/common/etag",permalink:"/cloud-sdk/docs/js/features/odata/common/etag",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/common/etag.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"An ",(0,s.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag"},"ETag")," is a version identifier that is often used to implement an optimistic locking mechanism.\nThe SAP Cloud SDK will try to read version identifiers from responses and set them when sending OData requests."),(0,s.kt)("p",null,"Consider the following example:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const { businessPartnerApi } = businessPartnerService();\n\nasync function modifyBusinessPartner(id) {\n  const businessPartner = await businessPartnerApi\n    .requestBuilder()\n    .getByKey(id)\n    .execute(destination);\n\n  // do some modification\n  applyModification(businessPartner);\n\n  return businessPartnerApi\n    .requestBuilder()\n    .update(businessPartner)\n    .execute(destination);\n}\n")),(0,s.kt)("p",null,"When executing ",(0,s.kt)("inlineCode",{parentName:"p"},"getAll")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"getByKey")," requests, the SAP Cloud SDK will automatically attempt to extract the version identifier from the response and store it within the returned entity (",(0,s.kt)("inlineCode",{parentName:"p"},"partner")," in the example above).\nWhen executing ",(0,s.kt)("inlineCode",{parentName:"p"},"update")," requests, the version identifier will be sent in the ",(0,s.kt)("inlineCode",{parentName:"p"},"If-match")," request header."),(0,s.kt)("admonition",{type:"note"},(0,s.kt)("p",{parentName:"admonition"},"If a service requires this header to be sent: Fetching the entity from the service first is essential to ensure that the ETag is present and up to date."),(0,s.kt)("p",{parentName:"admonition"},"By default, an ETag is sent if it's present on the entity being modified.\n",(0,s.kt)("inlineCode",{parentName:"p"},"ignoreVersionIdentifier()")," will instead always send a ",(0,s.kt)("inlineCode",{parentName:"p"},"*")," which acts as a wildcard to match all ETags.")))}c.isMDXComponent=!0},19077:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/common/function-imports/entity-return-type",id:"features/odata/common/function-imports/entity-return-type",title:"entity-return-type",description:"For some OData functions or action imports, the execute() method might be missing as intended.",source:"@site/docs-js/features/odata/common/function-imports/entity-return-type.mdx",sourceDirName:"features/odata/common/function-imports",slug:"/features/odata/common/function-imports/entity-return-type",permalink:"/cloud-sdk/docs/js/features/odata/common/function-imports/entity-return-type",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/common/function-imports/entity-return-type.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("admonition",{title:"Troubleshooting",type:"note"},(0,s.kt)("p",{parentName:"admonition"},"For some OData functions or action imports, the ",(0,s.kt)("inlineCode",{parentName:"p"},"execute()")," method might be missing as intended.\nTypically, this might happen when an entity type is shared by multiple entity sets and is used as the return type of OData function or action imports.\nIn such a case you can use ",(0,s.kt)("inlineCode",{parentName:"p"},"executeRaw()")," method for getting the raw response returned after invoking the OData function or action via type-safe API and deserialize it on your own.")))}c.isMDXComponent=!0},99138:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/common/function-imports/etag-function-import",id:"features/odata/common/function-imports/etag-function-import",title:"etag-function-import",description:"Operations do not support ETag handling automatically.",source:"@site/docs-js/features/odata/common/function-imports/etag-function-import.mdx",sourceDirName:"features/odata/common/function-imports",slug:"/features/odata/common/function-imports/etag-function-import",permalink:"/cloud-sdk/docs/js/features/odata/common/function-imports/etag-function-import",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/common/function-imports/etag-function-import.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Operations do not support ETag handling automatically.\nIf your service requires the version identifier of an entity to be present, you can pass it to the request on your own using the ",(0,s.kt)("inlineCode",{parentName:"p"},"addCustomHeaders()")," method (see example below).\nWith this approach, you have to retrieve the required entity with a ",(0,s.kt)("inlineCode",{parentName:"p"},"GET")," request, before executing the function import.\nNote, that if the function import execution succeeds, the version identifier of your entity will be outdated."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"myFunction()\n  .addCustomHeaders({ 'if-match': entity.versionIdentifier })\n  .execute(destination);\n")))}c.isMDXComponent=!0},44565:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/common/operations/count",id:"features/odata/common/operations/count",title:"count",description:"The method count() allows you to get the number of elements in a collection.",source:"@site/docs-js/features/odata/common/operations/count.mdx",sourceDirName:"features/odata/common/operations",slug:"/features/odata/common/operations/count",permalink:"/cloud-sdk/docs/js/features/odata/common/operations/count",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/common/operations/count.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"The method ",(0,s.kt)("inlineCode",{parentName:"p"},"count()")," allows you to get the number of elements in a collection.\nIt is only available for ",(0,s.kt)("inlineCode",{parentName:"p"},"getAll()")," requests and is added before the request execution:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const { businessPartnerApi } = businessPartnerService();\nbusinessPartnerApi.requestBuilder().getAll().count();\n")),(0,s.kt)("p",null,"The return type of count requests is a ",(0,s.kt)("inlineCode",{parentName:"p"},"Promise<number>"),".\nYou can combine the ",(0,s.kt)("inlineCode",{parentName:"p"},"count()")," with filter conditions.\nTo get the number of business partners with first name ",(0,s.kt)("inlineCode",{parentName:"p"},"John")," execute the following request:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const { businessPartnerApi } = businessPartnerService();\nbusinessPartnerApi\n  .requestBuilder()\n  .filter(businessPartnerApi.schema.FIRST_NAME.equals('John'))\n  .count()\n  .getAll();\n")),(0,s.kt)("p",null,"As defined in the OData spec ",(0,s.kt)("inlineCode",{parentName:"p"},"count")," is not affected by ",(0,s.kt)("inlineCode",{parentName:"p"},"top"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"skip"),", and ",(0,s.kt)("inlineCode",{parentName:"p"},"orderBy"),"."),(0,s.kt)("admonition",{type:"note"},(0,s.kt)("mdxAdmonitionTitle",{parentName:"admonition"},(0,s.kt)("inlineCode",{parentName:"mdxAdmonitionTitle"},"top()")," and ",(0,s.kt)("inlineCode",{parentName:"mdxAdmonitionTitle"},"skip()")," are ignored for count"),(0,s.kt)("p",{parentName:"admonition"},"If you include these methods in a count request they will be ignored by the SAP Cloud SDK.\nThese three requests will all return the same value."),(0,s.kt)("pre",{parentName:"admonition"},(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"businessPartnerApi.requestBuilder().getAll().top(5).count();\nbusinessPartnerApi.requestBuilder().getAll().skip(5).count();\nbusinessPartnerApi.requestBuilder().getAll().count();\n"))))}c.isMDXComponent=!0},76580:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/common/operations/create-as-child-of",id:"features/odata/common/operations/create-as-child-of",title:"create-as-child-of",description:"Assume you have already created a business partner and would like to add an address to it:",source:"@site/docs-js/features/odata/common/operations/create-as-child-of.mdx",sourceDirName:"features/odata/common/operations",slug:"/features/odata/common/operations/create-as-child-of",permalink:"/cloud-sdk/docs/js/features/odata/common/operations/create-as-child-of",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/common/operations/create-as-child-of.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Assume you have already created a business partner and would like to add an address to it:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const { businessPartnerApi, businessPartnerAddressApi } =\n  businessPartnerService();\nconst existingBusinessPartner = await businessPartnerApi\n  .requestBuilder()\n  .getByKey(myID)\n  .execute(myDestination);\n\nconst newAddress = businessPartnerAddressApi\n  .entityBuilder()\n  .country('DE')\n  .postalCode('14469')\n  .cityName('Potsdam')\n  .streetName('Konrad-Zuse-Ring')\n  .houseNumber('10')\n  .build();\n")),(0,s.kt)("p",null,"This can be done by using the ",(0,s.kt)("inlineCode",{parentName:"p"},"asChildOf()")," method which allows for creating an entity as a child of an existing entity.\nYou need to give the parent object and the field connecting the two entities:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"businessPartnerAddressApi\n  .requestBuilder()\n  .create(newAddress)\n  .asChildOf(\n    existingBusinessPartner,\n    businessPartnerApi.schema.TO_BUSINESS_PARTNER_ADDRESS\n  )\n  .execute(myDestination);\n")))}c.isMDXComponent=!0},77509:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/common/operations/create",id:"features/odata/common/operations/create",title:"create",description:"The CreateRequestBuilder class allows you to send a POST request to create an entity:",source:"@site/docs-js/features/odata/common/operations/create.mdx",sourceDirName:"features/odata/common/operations",slug:"/features/odata/common/operations/create",permalink:"/cloud-sdk/docs/js/features/odata/common/operations/create",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/common/operations/create.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"CreateRequestBuilder")," class allows you to send a ",(0,s.kt)("inlineCode",{parentName:"p"},"POST")," request to create an entity:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const { businessPartnerApi } = businessPartnerService();\nconst businessPartner = businessPartnerApi.entityBuilder().build();\nbusinessPartnerApi.requestBuilder().create(businessPartner);\n")),(0,s.kt)("p",null,"In the example above you created an instance of ",(0,s.kt)("inlineCode",{parentName:"p"},"BusinessPartner")," and sent it to the ",(0,s.kt)("inlineCode",{parentName:"p"},"BusinessPartner")," service in a ",(0,s.kt)("inlineCode",{parentName:"p"},"POST")," request."))}c.isMDXComponent=!0},93154:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/common/operations/deep-create",id:"features/odata/common/operations/deep-create",title:"deep-create",description:"It is also possible to create an entity together with related entities in a single request:",source:"@site/docs-js/features/odata/common/operations/deep-create.mdx",sourceDirName:"features/odata/common/operations",slug:"/features/odata/common/operations/deep-create",permalink:"/cloud-sdk/docs/js/features/odata/common/operations/deep-create",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/common/operations/deep-create.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"It is also possible to create an entity together with related entities in a single request:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"// build a business partner instance with one linked address\nconst { businessPartnerApi, businessPartnerAddressApi } =\n  businessPartnerService();\nconst businessPartner = businessPartnerApi\n  .entityBuilder()\n  .firstName('John')\n  .lastName('Doe')\n  .businessPartnerCategory('1')\n  .toBusinessPartnerAddress([\n    businessPartnerAddressApi\n      .entityBuilder()\n      .country('DE')\n      .postalCode('14469')\n      .cityName('Potsdam')\n      .streetName('Konrad-Zuse-Ring')\n      .houseNumber('10')\n      .build()\n  ])\n  .build();\n\n// execute the create request\nbusinessPartnerApi\n  .requestBuilder()\n  .create(businessPartner)\n  .execute(myDestination);\n")),(0,s.kt)("admonition",{title:"Troubleshooting",type:"note"},(0,s.kt)("p",{parentName:"admonition"},"When you try the example code above for testing the deep create feature, you might see some errors like ",(0,s.kt)("inlineCode",{parentName:"p"},'"operation module BUA_CHECK_ADDRESS_VALIDITY_ALL; a check table is missing"'),".\nTypically, it can happen if you are using a new system with a default configuration.\nCall the ",(0,s.kt)("inlineCode",{parentName:"p"},"addressUsage()")," method as shown in the example below to fix it.")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const { businessPartnerApi, businessPartnerAddressApi, buPaAddressUsageApi } =\n  businessPartnerService();\nbusinessPartnerApi\n  .entityBuilder()\n  .firstName('John')\n  .lastName('Doe')\n  .businessPartnerCategory('1')\n  .toBusinessPartnerAddress([\n    businessPartnerAddressApi\n      .entityBuilder()\n      .country('DE')\n      .postalCode('14469')\n      .cityName('Potsdam')\n      .streetName('Konrad-Zuse-Ring')\n      .houseNumber('10')\n      // additional code starts\n      .toAddressUsage([\n        buPaAddressUsageApi.entityBuilder().addressUsage('XXDEFAULT').build()\n      ])\n      .build()\n  ])\n  .build();\n")),(0,s.kt)("p",null,"You can also create an entity as a child of another entity with the ",(0,s.kt)("inlineCode",{parentName:"p"},"asChildOf()")," method."))}c.isMDXComponent=!0},51614:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/common/operations/delete",id:"features/odata/common/operations/delete",title:"delete",description:"The DeleteRequestBuilder class allows you to create DELETE requests, that delete an entity.",source:"@site/docs-js/features/odata/common/operations/delete.mdx",sourceDirName:"features/odata/common/operations",slug:"/features/odata/common/operations/delete",permalink:"/cloud-sdk/docs/js/features/odata/common/operations/delete",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/common/operations/delete.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"DeleteRequestBuilder")," class allows you to create ",(0,s.kt)("inlineCode",{parentName:"p"},"DELETE")," requests, that delete an entity."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"/*\n  The following won't work on the real SAP S/4HANA BusinessPartner service because BusinessPartners cannot be deleted.\n  This is added only for the sake of the example.\n*/\nconst { businessPartnerApi } = businessPartnerService();\nbusinessPartnerApi.requestBuilder().delete(businessPartner);\n")),(0,s.kt)("p",null,"Be aware that delete requests will fail if their ETag doesn't match.\nCheck out the ",(0,s.kt)("a",{parentName:"p",href:"#handling-of-etags"},"ETag")," section for more information."))}c.isMDXComponent=!0},87104:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/common/operations/get-all",id:"features/odata/common/operations/get-all",title:"get-all",description:"The GetAllRequestBuilder class allows you to create a request to retrieve all entities that match the request configuration.",source:"@site/docs-js/features/odata/common/operations/get-all.mdx",sourceDirName:"features/odata/common/operations",slug:"/features/odata/common/operations/get-all",permalink:"/cloud-sdk/docs/js/features/odata/common/operations/get-all",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/common/operations/get-all.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"GetAllRequestBuilder")," class allows you to create a request to retrieve all entities that match the request configuration."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const { businessPartnerApi } = businessPartnerService();\nbusinessPartnerApi.requestBuilder().getAll();\n")),(0,s.kt)("p",null,"The example above creates a request to get all ",(0,s.kt)("inlineCode",{parentName:"p"},"BusinessPartner")," entities."))}c.isMDXComponent=!0},12350:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/common/operations/get-by-key",id:"features/odata/common/operations/get-by-key",title:"get-by-key",description:"The GetByKeyRequestBuilder class allows you to create a request to retrieve one entity based on its key:",source:"@site/docs-js/features/odata/common/operations/get-by-key.mdx",sourceDirName:"features/odata/common/operations",slug:"/features/odata/common/operations/get-by-key",permalink:"/cloud-sdk/docs/js/features/odata/common/operations/get-by-key",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/common/operations/get-by-key.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"GetByKeyRequestBuilder")," class allows you to create a request to retrieve one entity based on its key:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const { businessPartnerApi } = businessPartnerService();\nbusinessPartnerApi.requestBuilder().getByKey('id');\n")),(0,s.kt)("p",null,"The example above retrieves the ",(0,s.kt)("inlineCode",{parentName:"p"},"BusinessPartner")," with the ID ",(0,s.kt)("inlineCode",{parentName:"p"},"'id'"),"."),(0,s.kt)("p",null,"The result can be restricted by applying the ",(0,s.kt)("a",{parentName:"p",href:"#select"},"select")," function, same as in the ",(0,s.kt)("a",{parentName:"p",href:"#getall-request-builder"},"GetAll")," request."))}c.isMDXComponent=!0},69178:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/common/operations/ignore-or-overwrite-version",id:"features/odata/common/operations/ignore-or-overwrite-version",title:"ignore-or-overwrite-version",description:"Entities can only be updated or deleted if ETags match.",source:"@site/docs-js/features/odata/common/operations/ignore-or-overwrite-version.mdx",sourceDirName:"features/odata/common/operations",slug:"/features/odata/common/operations/ignore-or-overwrite-version",permalink:"/cloud-sdk/docs/js/features/odata/common/operations/ignore-or-overwrite-version",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/common/operations/ignore-or-overwrite-version.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Entities can only be updated or deleted if ",(0,s.kt)("a",{parentName:"p",href:"#handling-of-etags"},"ETags")," match.\nIf you want to force either an update or the deletion of the entity regardless of the ETag, configure the request to ignore version identifiers with the ",(0,s.kt)("inlineCode",{parentName:"p"},"ignoreVersionIdentifier()")," method."),(0,s.kt)("p",null,"Below is an example with an update:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const { businessPartnerApi } = businessPartnerService();\nbusinessPartnerApi\n  .requestBuilder()\n  .update(businessPartner)\n  .ignoreVersionIdentifier();\n")),(0,s.kt)("p",null,"You can also overwrite ETags using method ",(0,s.kt)("inlineCode",{parentName:"p"},"setVersionIdentifier()"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const { businessPartnerApi } = businessPartnerService();\nbusinessPartnerApi\n  .requestBuilder()\n  .update(businessPartner)\n  .setVersionIdentifier('etag');\n")),(0,s.kt)("p",null,"In the example above, the ETag ",(0,s.kt)("inlineCode",{parentName:"p"},"etag")," is used instead of the original one."))}c.isMDXComponent=!0},58176:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/common/operations/replace",id:"features/odata/common/operations/replace",title:"replace",description:"To replace an entity instead of just updating specific fields, use thereplaceWholeEntityWithPut() method:",source:"@site/docs-js/features/odata/common/operations/replace.mdx",sourceDirName:"features/odata/common/operations",slug:"/features/odata/common/operations/replace",permalink:"/cloud-sdk/docs/js/features/odata/common/operations/replace",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/common/operations/replace.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"To replace an entity instead of just updating specific fields, use the",(0,s.kt)("inlineCode",{parentName:"p"},"replaceWholeEntityWithPut()")," method:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const { businessPartnerApi } = businessPartnerService();\n\nbusinessPartnerApi\n  .requestBuilder()\n  .update(businessPartner)\n  .replaceWholeEntityWithPut();\n")),(0,s.kt)("p",null,"This will send a PUT request and include all existing properties on your entity, whether they were changed or not."))}c.isMDXComponent=!0},22166:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/common/operations/set-ignored-fields",id:"features/odata/common/operations/set-ignored-fields",title:"set-ignored-fields",description:"If you changed properties on an entity, that you do not want to send in the payload of the update request, use the setIgnoredFields() method to ignore them.",source:"@site/docs-js/features/odata/common/operations/set-ignored-fields.mdx",sourceDirName:"features/odata/common/operations",slug:"/features/odata/common/operations/set-ignored-fields",permalink:"/cloud-sdk/docs/js/features/odata/common/operations/set-ignored-fields",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/common/operations/set-ignored-fields.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"If you changed properties on an entity, that you do not want to send in the payload of the update request, use the ",(0,s.kt)("inlineCode",{parentName:"p"},"setIgnoredFields()")," method to ignore them."),(0,s.kt)("p",null,"In the following example, the ",(0,s.kt)("inlineCode",{parentName:"p"},"PATCH")," request won't contain changes that were made to the ",(0,s.kt)("inlineCode",{parentName:"p"},"FIRST_NAME")," property of the business partner."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const { businessPartnerApi } = businessPartnerService();\n// Get a business partner\nconst businessPartner = await businessPartnerApi\n  .requestBuilder()\n  .getByKey('1')\n  .execute({ destinationName: 'myDestination' });\n\n// Change first name and last name\nbusinessPartner.firstName = 'Steve';\nbusinessPartner.lastName = 'Smith';\n\n// Send a PATCH request with `{ \"LastName\" : \"Smith\" }`  and do not include the changed first name\nbusinessPartnerApi\n  .requestBuilder()\n  .update(businessPartner)\n  .setIgnoredFields(businessPartnerApi.schema.FIRST_NAME);\n")))}c.isMDXComponent=!0},54374:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/common/operations/set-required-fields",id:"features/odata/common/operations/set-required-fields",title:"set-required-fields",description:"If you want to send properties in the payload of the update request, that you did not change, use the setRequiredFields() method to add them.",source:"@site/docs-js/features/odata/common/operations/set-required-fields.mdx",sourceDirName:"features/odata/common/operations",slug:"/features/odata/common/operations/set-required-fields",permalink:"/cloud-sdk/docs/js/features/odata/common/operations/set-required-fields",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/common/operations/set-required-fields.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"If you want to send properties in the payload of the update request, that you did not change, use the ",(0,s.kt)("inlineCode",{parentName:"p"},"setRequiredFields()")," method to add them."),(0,s.kt)("p",null,"In the following example, the ",(0,s.kt)("inlineCode",{parentName:"p"},"PATCH")," request will contain the ",(0,s.kt)("inlineCode",{parentName:"p"},"FIRST_NAME")," property of the business partner, even if it didn't change."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'const { businessPartnerApi } = businessPartnerService();\n// Get a business partner\nconst businessPartner = await businessPartnerApi\n  .requestBuilder()\n  .getByKey(\'1\')\n  .execute({ destinationName: \'myDestination\' });\n\n// Change last name\nbusinessPartnerResponse.lastName = \'Smith\';\n\n// Send a PATCH request with `{ "LastName" : "Smith", "FirstName": "Steve" }`  and include the first name although it was not changed\nbusinessPartnerApi\n  .requestBuilder()\n  .update(businessPartner)\n  .setRequiredFields(businessPartnerApi.schema.FIRST_NAME);\n')))}c.isMDXComponent=!0},58924:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/common/operations/update",id:"features/odata/common/operations/update",title:"update",description:"The update request builder allows you to change existing entities.",source:"@site/docs-js/features/odata/common/operations/update.mdx",sourceDirName:"features/odata/common/operations",slug:"/features/odata/common/operations/update",permalink:"/cloud-sdk/docs/js/features/odata/common/operations/update",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/common/operations/update.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"The update request builder allows you to change existing entities.\nBy default, ",(0,s.kt)("inlineCode",{parentName:"p"},"PATCH")," is used to only update changed fields."),(0,s.kt)("p",null,"The following example first gets a business partner, changes one of its values, and then sends an update request."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const { businessPartnerApi } = businessPartnerService();\n\n// Get a business partner\nconst businessPartner = await businessPartnerApi\n  .requestBuilder()\n  .getByKey('1')\n  .execute({ destinationName: 'myDestination' });\n\n// Change first name\nbusinessPartner.firstName = 'Steve';\n\n// Send a PATCH request with `{ \"FirstName\" : \"Steve\" }`\nbusinessPartnerApi.requestBuilder().update(businessPartner);\n")),(0,s.kt)("p",null,"The code above changed the first name of the given business partner.\nThe payload sent to the service with ",(0,s.kt)("inlineCode",{parentName:"p"},"PATCH")," includes only the first name."),(0,s.kt)("p",null,"Be aware that update requests will fail if their ETags don't match.\nCheck out the ",(0,s.kt)("a",{parentName:"p",href:"#handling-of-etags"},"ETag")," section for more information."))}c.isMDXComponent=!0},28018:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/common/query-parameter/filter-functions",id:"features/odata/common/query-parameter/filter-functions",title:"filter-functions",description:"There are predefined filter functions e.g. length(), substring(), substringOf() in the core library, that allow for a wide range of filter expressions:",source:"@site/docs-js/features/odata/common/query-parameter/filter-functions.mdx",sourceDirName:"features/odata/common/query-parameter",slug:"/features/odata/common/query-parameter/filter-functions",permalink:"/cloud-sdk/docs/js/features/odata/common/query-parameter/filter-functions",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/common/query-parameter/filter-functions.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"There are predefined filter functions e.g. ",(0,s.kt)("inlineCode",{parentName:"p"},"length()"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"substring()"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"substringOf()")," in the core library, that allow for a wide range of filter expressions:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"/*\nFetch all business partners who have a first name shorter than 5 letters\n*/\nconst { businessPartnerApi } = businessPartnerService();\nbusinessPartnerApi\n  .requestBuilder()\n  .getAll()\n  .filter(length(businessPartnerApi.schema.FIRST_NAME).lessThan(5))\n  .execute(destination);\n")),(0,s.kt)("p",null,"Filter functions with return type ",(0,s.kt)("inlineCode",{parentName:"p"},"boolean")," can be used directly as a filter without ",(0,s.kt)("inlineCode",{parentName:"p"},"equal(true)"),".\nLogically, the two following examples are equivalent to each other:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"/*\n  $filter=startswith(FirstName, 'Bob') eq true\n*/\n.filter(\n  startsWith(businessPartnerApi.schema.FIRST_NAME, 'Bob').equal(true)\n)\n")),(0,s.kt)("p",null,"The filter expression can be shortened:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"  /*\n    $filter=startswith(FirstName, 'Bob')\n  */\n  .filter(\n    startsWith(businessPartnerApi.schema.FIRST_NAME, 'Bob')\n  )\n")),(0,s.kt)("p",null,"However, as some services might not support both versions shown above, you might have to choose one of them to fit the target system."))}c.isMDXComponent=!0},42236:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/common/query-parameter/filter-one-to-one",id:"features/odata/common/query-parameter/filter-one-to-one",title:"filter-one-to-one",description:"In addition to basic properties, filters can also be applied to one-to-one navigation properties.",source:"@site/docs-js/features/odata/common/query-parameter/filter-one-to-one.mdx",sourceDirName:"features/odata/common/query-parameter",slug:"/features/odata/common/query-parameter/filter-one-to-one",permalink:"/cloud-sdk/docs/js/features/odata/common/query-parameter/filter-one-to-one",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/common/query-parameter/filter-one-to-one.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"In addition to basic properties, filters can also be applied to one-to-one navigation properties.\nThe example below shows how to filter on the ",(0,s.kt)("inlineCode",{parentName:"p"},"TO_CUSTOMER"),", which is a one-to-one navigation property of the BusinessPartner entity.\nPlease note, that the ",(0,s.kt)("inlineCode",{parentName:"p"},"CUSTOMER_NAME")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"CUSTOMER_ACCOUNT_GROUP")," are properties of the entity ",(0,s.kt)("inlineCode",{parentName:"p"},"Customer"),", which is the type of the one-to-one navigation property ",(0,s.kt)("inlineCode",{parentName:"p"},"TO_CUSTOMER"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"/*\n  Get all business partners that match all the following conditions:\n    - Have customer with the customer name 'John'\n    - Have customer with the customer account group '0001'\n*/\n.filter(\n  businessPartnerApi.schema.TO_CUSTOMER.filter(\n    customerApi.schema.CUSTOMER_NAME.equals('John'),\n    customerApi.schema.CUSTOMER_ACCOUNT_GROUP.equals('0001')\n  )\n)\n")),(0,s.kt)("p",null,"The generated ",(0,s.kt)("inlineCode",{parentName:"p"},"$filter")," will be:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"$filter=((to_Customer/CustomerName eq 'John' and to_Customer/CustomerAccountGroup  eq '0001'))\n")))}c.isMDXComponent=!0},99225:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/common/query-parameter/filter",id:"features/odata/common/query-parameter/filter",title:"filter",description:"When operating on a collection of entities, the API offers filter( ... ) on the builders.",source:"@site/docs-js/features/odata/common/query-parameter/filter.mdx",sourceDirName:"features/odata/common/query-parameter",slug:"/features/odata/common/query-parameter/filter",permalink:"/cloud-sdk/docs/js/features/odata/common/query-parameter/filter",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/common/query-parameter/filter.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"When operating on a collection of entities, the API offers ",(0,s.kt)("inlineCode",{parentName:"p"},"filter( ... )")," on the builders.\nIt directly corresponds to the ",(0,s.kt)("inlineCode",{parentName:"p"},"$filter")," parameter of the request."),(0,s.kt)("p",null,"Filters are built via the fields available on the schema property of the entities API class:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"/*\n  Get all business partners that either:\n    - Have first name 'Alice' but not last name 'Bob'\n    - Or have first name 'Mallory'\n*/\nconst { businessPartnerApi } = businessPartnerService();\nbusinessPartnerApi\n  .requestBuilder()\n  .getAll()\n  .filter(\n    or(\n      and(\n        businessPartnerApi.schema.FIRST_NAME.equals('Alice'),\n        businessPartnerApi.schema.LAST_NAME.notEquals('Bob')\n      ),\n      businessPartnerApi.schema.FIRST_NAME.equals('Mallory')\n    )\n  )\n  .execute(destination);\n")),(0,s.kt)("p",null,"The EDM primitive types support all six comparison operators:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"lessThan()")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"lessOrEqual()")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"equals()")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"notEquals()")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"greaterOrEqual()")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"greaterThan()"))),(0,s.kt)("p",null,"The example above will translate to this filter parameter:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"$filter=(((FirstName eq 'Alice') and (LastName ne 'Bob')) or (FirstName eq 'Mallory'))\n")),(0,s.kt)("p",null,"Take note of the order of ",(0,s.kt)("inlineCode",{parentName:"p"},"and")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"or"),".\nAs ",(0,s.kt)("inlineCode",{parentName:"p"},"or")," is invoked on the result of ",(0,s.kt)("inlineCode",{parentName:"p"},"and")," it will form the outer expression while ",(0,s.kt)("inlineCode",{parentName:"p"},"and")," is an inner expression in the first branch of ",(0,s.kt)("inlineCode",{parentName:"p"},"or"),"."),(0,s.kt)("p",null,"In addition, the negation operator ",(0,s.kt)("inlineCode",{parentName:"p"},"not")," can also be used for wrapping any filter expressions."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"/*\n  Get all business partners that do not match any of the cases:\n    - Have first name 'Alice'\n    - Have last name 'Bob'\n*/\n.filter(\n  not(\n    or(\n      businessPartnerApi.schema.FIRST_NAME.equals('Alice'),\n      businessPartnerApi.schema.LAST_NAME.equals('Bob')\n    )\n  )\n)\n")),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"$filter")," parameter will then be generated like below:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"$filter=not (FirstName eq 'Alice') or (LastName eq 'Bob'))\n")),(0,s.kt)("p",null,"It is also possible to pass multiple filters to the same filter function without concatenating them with ",(0,s.kt)("inlineCode",{parentName:"p"},"and")," or ",(0,s.kt)("inlineCode",{parentName:"p"},"or"),".\nThey will be concatenated with ",(0,s.kt)("inlineCode",{parentName:"p"},"and")," by default.\nThe two following examples are equal:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},".filter(\n  and(\n    businessPartnerApi.schema.FIRST_NAME.equals('Alice'),\n    businessPartnerApi.schema.LAST_NAME.notEquals('Bob')\n  )\n)\n")),(0,s.kt)("p",null,"The example above can be shortened to:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},".filter(\n  businessPartnerApi.schema.FIRST_NAME.equals('Alice'),\n  businessPartnerApi.schema.LAST_NAME.notEquals('Bob')\n)\n")))}c.isMDXComponent=!0},63275:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/common/query-parameter/order-by",id:"features/odata/common/query-parameter/order-by",title:"order-by",description:"The orderBy() method allows you to request resources in either ascending order using asc() or descending order using desc().",source:"@site/docs-js/features/odata/common/query-parameter/order-by.mdx",sourceDirName:"features/odata/common/query-parameter",slug:"/features/odata/common/query-parameter/order-by",permalink:"/cloud-sdk/docs/js/features/odata/common/query-parameter/order-by",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/common/query-parameter/order-by.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"orderBy()")," method allows you to request resources in either ascending order using ",(0,s.kt)("inlineCode",{parentName:"p"},"asc()")," or descending order using ",(0,s.kt)("inlineCode",{parentName:"p"},"desc()"),".\nIf ",(0,s.kt)("inlineCode",{parentName:"p"},"asc()")," or ",(0,s.kt)("inlineCode",{parentName:"p"},"desc()")," is not specified, then the resources will be ordered in ascending order by default."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const { businessPartnerApi } = businessPartnerService();\nbusinessPartnerApi\n  .requestBuilder()\n  .getAll()\n  .orderBy(asc(businessPartnerApi.schema.FIRST_NAME));\n")))}c.isMDXComponent=!0},13238:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/common/query-parameter/skip",id:"features/odata/common/query-parameter/skip",title:"skip",description:"The skip() method allows you to skip a number of results in the requested set.",source:"@site/docs-js/features/odata/common/query-parameter/skip.mdx",sourceDirName:"features/odata/common/query-parameter",slug:"/features/odata/common/query-parameter/skip",permalink:"/cloud-sdk/docs/js/features/odata/common/query-parameter/skip",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/common/query-parameter/skip.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"skip()")," method allows you to skip a number of results in the requested set.\nIt can be useful for paging:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const { businessPartnerApi } = businessPartnerService();\nbusinessPartnerApi.requestBuilder().getAll().skip(10);\n")))}c.isMDXComponent=!0},92497:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));n(74866),n(85162);const r={},o=void 0,i={unversionedId:"features/odata/common/query-parameter/top",id:"features/odata/common/query-parameter/top",title:"top",description:"The top() method limits the number of returned results.",source:"@site/docs-js/features/odata/common/query-parameter/top.mdx",sourceDirName:"features/odata/common/query-parameter",slug:"/features/odata/common/query-parameter/top",permalink:"/cloud-sdk/docs/js/features/odata/common/query-parameter/top",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/common/query-parameter/top.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"top()")," method limits the number of returned results.\nThis can also be useful for paging:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const { businessPartnerApi } = businessPartnerService();\nbusinessPartnerApi.requestBuilder().getAll().top(10);\n")),(0,s.kt)("p",null,"The example above retrieves the first ten ",(0,s.kt)("inlineCode",{parentName:"p"},"BusinessPartner")," entities."))}c.isMDXComponent=!0},32750:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/common/skip-csrf-token-example",id:"features/odata/common/skip-csrf-token-example",title:"skip-csrf-token-example",description:"",source:"@site/docs-js/features/odata/common/skip-csrf-token-example.mdx",sourceDirName:"features/odata/common",slug:"/features/odata/common/skip-csrf-token-example",permalink:"/cloud-sdk/docs/js/features/odata/common/skip-csrf-token-example",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/common/skip-csrf-token-example.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const { businessPartnerApi } = businessPartnerService();\nbusinessPartnerApi\n  .requestBuilder()\n  .update(businessPartner)\n  .skipCsrfTokenFetching();\n")))}c.isMDXComponent=!0},4471:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>C,contentTitle:()=>v,default:()=>T,frontMatter:()=>b,metadata:()=>N,toc:()=>q});var a=n(87462),s=n(67294),r=n(3905),o=n(41609),i=n(97797),u=n(38480),l=n(49570);function d(){return s.createElement(i.default,null)}function c(){return s.createElement(u.default,null)}function p(){return s.createElement(l.default,null)}var m=n(88207),f=n(71772),h=n(5068),k=n(10239),g=n(70727),y=n(43591);const b={id:"v2-client",title:"Use the OData v2 Type-safe Client API",sidebar_label:"OData v2 Client API",description:"Use the SAP Cloud SDK for JavaScript to build and run OData v2 requests in a type-safe way.",keywords:["sap","cloud","sdk","odata","JavaScript","TypeScript","consume"]},v=void 0,N={unversionedId:"features/odata/v2-client",id:"features/odata/v2-client",title:"Use the OData v2 Type-safe Client API",description:"Use the SAP Cloud SDK for JavaScript to build and run OData v2 requests in a type-safe way.",source:"@site/docs-js/features/odata/odata-v2-client.mdx",sourceDirName:"features/odata",slug:"/features/odata/v2-client",permalink:"/cloud-sdk/docs/js/features/odata/v2-client",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/odata-v2-client.mdx",tags:[],version:"current",frontMatter:{id:"v2-client",title:"Use the OData v2 Type-safe Client API",sidebar_label:"OData v2 Client API",description:"Use the SAP Cloud SDK for JavaScript to build and run OData v2 requests in a type-safe way.",keywords:["sap","cloud","sdk","odata","JavaScript","TypeScript","consume"]},sidebar:"docsJsSidebar",previous:{title:"Execute an OData request",permalink:"/cloud-sdk/docs/js/features/odata/execute-request"},next:{title:"OData v4 Client API",permalink:"/cloud-sdk/docs/js/features/odata/v4-client"}},C={},q=[{value:"Entities",id:"entities",level:2},{value:"Custom Fields",id:"custom-fields",level:3},{value:"Build an Entity From Scratch",id:"build-an-entity-from-scratch",level:3},{value:"Build an Entity From a JSON Representation",id:"build-an-entity-from-a-json-representation",level:3},{value:"Deserialize an OData JSON Response to an Entity",id:"deserialize-an-odata-json-response-to-an-entity",level:3},{value:"Customize (De-)Serialization",id:"customize-de-serialization",level:3},{value:"<code>GetAllRequestBuilder</code>",id:"getallrequestbuilder",level:2},{value:"Select",id:"select",level:3},{value:"Filter",id:"filter",level:3},{value:"Filter on One-to-One Navigation Properties",id:"filter-on-one-to-one-navigation-properties",level:4},{value:"More Filter Expressions",id:"more-filter-expressions",level:4},{value:"Skip",id:"skip",level:3},{value:"Top",id:"top",level:3},{value:"OrderBy",id:"orderby",level:3},{value:"Count",id:"count",level:3},{value:"<code>GetByKeyRequestBuilder</code>",id:"getbykeyrequestbuilder",level:2},{value:"<code>CreateRequestBuilder</code>",id:"createrequestbuilder",level:2},{value:"Deep Create",id:"deep-create",level:3},{value:"Create as Child Of",id:"create-as-child-of",level:3},{value:"<code>UpdateRequestBuilder</code>",id:"updaterequestbuilder",level:2},{value:"Replace the Entity With <code>PUT</code>",id:"replace-the-entity-with-put",level:3},{value:"Set Required Fields",id:"set-required-fields",level:3},{value:"Set Ignored Fields",id:"set-ignored-fields",level:3},{value:"<code>DeleteRequestBuilder</code>",id:"deleterequestbuilder",level:2},{value:"Handling of ETags",id:"handling-of-etags",level:2},{value:"Ignore or Overwrite the Version Identifier",id:"ignore-or-overwrite-the-version-identifier",level:3},{value:"Handling of Cross-Site Request Forgery Tokens",id:"handling-of-cross-site-request-forgery-tokens",level:2},{value:"Skip <code>CSRF</code> Token Handling",id:"skip-csrf-token-handling",level:2},{value:"Custom <code>CSRF</code> Token Handling",id:"custom-csrf-token-handling",level:2},{value:"Available Filter Expressions",id:"available-filter-expressions",level:2},{value:"Filter Functions",id:"filter-functions",level:3},{value:"Function Imports",id:"function-imports",level:2},{value:"Request Builder",id:"request-builder",level:3},{value:"Setting ETag",id:"setting-etag",level:3},{value:"Batch Requests",id:"batch-requests",level:2},{value:"Retrieve Request",id:"retrieve-request",level:3},{value:"Changeset",id:"changeset",level:3},{value:"Responses",id:"responses",level:3},{value:"Combining Requests",id:"combining-requests",level:3},{value:"Serialization",id:"serialization",level:3},{value:"Configure Subrequest Serialization",id:"configure-subrequest-serialization",level:3}],w={toc:q};function T(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},w,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This guide explains how to use features of the ",(0,r.kt)("a",{parentName:"p",href:"https://www.odata.org/documentation/odata-version-2-0/"},"OData v2 protocol")," supported by the SAP Cloud SDK.\nTo demonstrate the features, this guide will use the ",(0,r.kt)("a",{parentName:"p",href:"https://api.sap.com/api/API_BUSINESS_PARTNER/resource"},"Business Partner Service")," from SAP S/4HANA."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"For more details on ",(0,r.kt)("strong",{parentName:"p"},"how to execute requests")," using a OData type-safe client by the SAP Cloud SDK, refer to ",(0,r.kt)("a",{parentName:"p",href:"/cloud-sdk/docs/js/features/odata/execute-request"},"this guide"),".")),(0,r.kt)("h2",{id:"entities"},"Entities"),(0,r.kt)(f.JH,{mdxType:"Entity"}),(0,r.kt)("h3",{id:"custom-fields"},"Custom Fields"),(0,r.kt)(f.K7,{mdxType:"CustomFields"}),(0,r.kt)("h3",{id:"build-an-entity-from-scratch"},"Build an Entity From Scratch"),(0,r.kt)(f.Lp,{mdxType:"EntityBuilder"}),(0,r.kt)("h3",{id:"build-an-entity-from-a-json-representation"},"Build an Entity From a JSON Representation"),(0,r.kt)(f.du,{mdxType:"FromJson"}),(0,r.kt)("h3",{id:"deserialize-an-odata-json-response-to-an-entity"},"Deserialize an OData JSON Response to an Entity"),(0,r.kt)(f.DD,{mdxType:"DeserializeEntity"}),(0,r.kt)("h3",{id:"customize-de-serialization"},"Customize (De-)Serialization"),(0,r.kt)(f.S4,{mdxType:"CustomDeSerializers"}),(0,r.kt)("h2",{id:"getallrequestbuilder"},(0,r.kt)("inlineCode",{parentName:"h2"},"GetAllRequestBuilder")),(0,r.kt)(h.M2,{mdxType:"GetAll"}),(0,r.kt)("h3",{id:"select"},"Select"),(0,r.kt)(d,{mdxType:"Select"}),(0,r.kt)("h3",{id:"filter"},"Filter"),(0,r.kt)(k.wn,{mdxType:"Filter"}),(0,r.kt)("h4",{id:"filter-on-one-to-one-navigation-properties"},"Filter on One-to-One Navigation Properties"),(0,r.kt)(k.Sl,{mdxType:"FilterOneToOne"}),(0,r.kt)("h4",{id:"more-filter-expressions"},"More Filter Expressions"),(0,r.kt)("p",null,"More advanced filter expressions can be found ",(0,r.kt)("a",{parentName:"p",href:"#available-filter-expressions"},"here"),"."),(0,r.kt)("h3",{id:"skip"},"Skip"),(0,r.kt)(k.hI,{mdxType:"Skip"}),(0,r.kt)("h3",{id:"top"},"Top"),(0,r.kt)(k.e4,{mdxType:"Top"}),(0,r.kt)("h3",{id:"orderby"},"OrderBy"),(0,r.kt)(k.d$,{mdxType:"OrderBy"}),(0,r.kt)("h3",{id:"count"},"Count"),(0,r.kt)(h.XF,{mdxType:"Count"}),(0,r.kt)("h2",{id:"getbykeyrequestbuilder"},(0,r.kt)("inlineCode",{parentName:"h2"},"GetByKeyRequestBuilder")),(0,r.kt)(h.LH,{mdxType:"GetByKey"}),(0,r.kt)("h2",{id:"createrequestbuilder"},(0,r.kt)("inlineCode",{parentName:"h2"},"CreateRequestBuilder")),(0,r.kt)(h.Qj,{mdxType:"Create"}),(0,r.kt)("h3",{id:"deep-create"},"Deep Create"),(0,r.kt)(h.qs,{mdxType:"DeepCreate"}),(0,r.kt)("h3",{id:"create-as-child-of"},"Create as Child Of"),(0,r.kt)(h._1,{mdxType:"CreateAsChildOf"}),(0,r.kt)("h2",{id:"updaterequestbuilder"},(0,r.kt)("inlineCode",{parentName:"h2"},"UpdateRequestBuilder")),(0,r.kt)(h.yy,{mdxType:"Update"}),(0,r.kt)("h3",{id:"replace-the-entity-with-put"},"Replace the Entity With ",(0,r.kt)("inlineCode",{parentName:"h3"},"PUT")),(0,r.kt)(h.BN,{mdxType:"Replace"}),(0,r.kt)("h3",{id:"set-required-fields"},"Set Required Fields"),(0,r.kt)(h.iY,{mdxType:"SetRequiredFields"}),(0,r.kt)("h3",{id:"set-ignored-fields"},"Set Ignored Fields"),(0,r.kt)(h.ls,{mdxType:"SetIgnoredFields"}),(0,r.kt)("h2",{id:"deleterequestbuilder"},(0,r.kt)("inlineCode",{parentName:"h2"},"DeleteRequestBuilder")),(0,r.kt)(h.HG,{mdxType:"Delete"}),(0,r.kt)("h2",{id:"handling-of-etags"},"Handling of ETags"),(0,r.kt)(m.RJ,{mdxType:"ETag"}),(0,r.kt)("h3",{id:"ignore-or-overwrite-the-version-identifier"},"Ignore or Overwrite the Version Identifier"),(0,r.kt)(h.aC,{mdxType:"IgnoreOrOverwriteVersion"}),(0,r.kt)("h2",{id:"handling-of-cross-site-request-forgery-tokens"},"Handling of Cross-Site Request Forgery Tokens"),(0,r.kt)(o.Vx,{mdxType:"Csrf"}),(0,r.kt)("h2",{id:"skip-csrf-token-handling"},"Skip ",(0,r.kt)("inlineCode",{parentName:"h2"},"CSRF")," Token Handling"),(0,r.kt)(o.Xc,{mdxType:"SkipCsrf"}),(0,r.kt)(m.VP,{mdxType:"SkipCsrfExample"}),(0,r.kt)("h2",{id:"custom-csrf-token-handling"},"Custom ",(0,r.kt)("inlineCode",{parentName:"h2"},"CSRF")," Token Handling"),(0,r.kt)("p",null,"If you need to adjust the way CSRF tokens are fetched, you can do so by using ",(0,r.kt)("a",{parentName:"p",href:"../middleware"},"middlewares"),":"),(0,r.kt)(m.$P,{mdxType:"CustomCsrf"}),(0,r.kt)("h2",{id:"available-filter-expressions"},"Available Filter Expressions"),(0,r.kt)("h3",{id:"filter-functions"},"Filter Functions"),(0,r.kt)(k._P,{mdxType:"FilterFunctions"}),(0,r.kt)("h2",{id:"function-imports"},"Function Imports"),(0,r.kt)("h3",{id:"request-builder"},"Request Builder"),(0,r.kt)(p,{mdxType:"RequestBuilder"}),(0,r.kt)(g.A,{mdxType:"EntityReturnType"}),(0,r.kt)("h3",{id:"setting-etag"},"Setting ETag"),(0,r.kt)(g.t,{mdxType:"EtagFunctionImport"}),(0,r.kt)("h2",{id:"batch-requests"},"Batch Requests"),(0,r.kt)(y.dD,{mdxType:"BatchIntro"}),(0,r.kt)("h3",{id:"retrieve-request"},"Retrieve Request"),(0,r.kt)("p",null,"A retrieve request represents an HTTP ",(0,r.kt)("inlineCode",{parentName:"p"},"GET")," request.\nIn terms of the SAP Cloud SDK this includes all requests built by ",(0,r.kt)("a",{parentName:"p",href:"#getall-request-builder"},(0,r.kt)("inlineCode",{parentName:"a"},"GetAllRequestBuilder")),", ",(0,r.kt)("a",{parentName:"p",href:"#getbykey-request-builder"},(0,r.kt)("inlineCode",{parentName:"a"},"GetByKeyRequestBuilder")),", and ",(0,r.kt)("a",{parentName:"p",href:"#function-imports"},(0,r.kt)("inlineCode",{parentName:"a"},"FunctionImportRequestBuilder"))," using ",(0,r.kt)("inlineCode",{parentName:"p"},"GET")," requests.\nIf you use TypeScript, a type error will appear when including a function import changing the data."),(0,r.kt)(y.iU,{mdxType:"RetrieveRequests"}),(0,r.kt)("h3",{id:"changeset"},"Changeset"),(0,r.kt)("p",null,"A changeset is a collection of HTTP ",(0,r.kt)("inlineCode",{parentName:"p"},"POST"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"PUT"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"PATCH")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"DELETE")," operations.\nSuch operations are built by the ",(0,r.kt)("a",{parentName:"p",href:"#create-request-builder"},(0,r.kt)("inlineCode",{parentName:"a"},"CreateRequestBuilder")),", ",(0,r.kt)("a",{parentName:"p",href:"#update-request-builder"},(0,r.kt)("inlineCode",{parentName:"a"},"UpdateRequestBuilder")),", ",(0,r.kt)("a",{parentName:"p",href:"#delete-request-builder"},(0,r.kt)("inlineCode",{parentName:"a"},"DeleteRequestBuilder")),", or ",(0,r.kt)("a",{parentName:"p",href:"#function-imports"},(0,r.kt)("inlineCode",{parentName:"a"},"FunctionImportRequestBuilder")),".\nIf you use TypeScript, a type error will appear when including a function import reading the data."),(0,r.kt)(y.as,{mdxType:"ChangeSet"}),(0,r.kt)(c,{mdxType:"ChangeSetExample"}),(0,r.kt)("h3",{id:"responses"},"Responses"),(0,r.kt)(y.n3,{mdxType:"Responses"}),(0,r.kt)("h3",{id:"combining-requests"},"Combining Requests"),(0,r.kt)(y.S$,{mdxType:"CombiningRequests"}),(0,r.kt)("h3",{id:"serialization"},"Serialization"),(0,r.kt)(y.yq,{mdxType:"Serialization"}),(0,r.kt)("h3",{id:"configure-subrequest-serialization"},"Configure Subrequest Serialization"),(0,r.kt)(y.P2,{mdxType:"ConfigureSerialization"}))}T.isMDXComponent=!0},38480:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/v2/changeset-example",id:"features/odata/v2/changeset-example",title:"changeset-example",description:"The example below is based on the Bills of Material service.",source:"@site/docs-js/features/odata/v2/changeset-example.mdx",sourceDirName:"features/odata/v2",slug:"/features/odata/v2/changeset-example",permalink:"/cloud-sdk/docs/js/features/odata/v2/changeset-example",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/v2/changeset-example.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"The example below is based on the ",(0,s.kt)("a",{parentName:"p",href:"https://api.sap.com/api/OP_API_BILL_OF_MATERIAL_SRV_0002/overview"},"Bills of Material service"),".\nSince the function ",(0,s.kt)("inlineCode",{parentName:"p"},"deleteBomHeaderWithEcn()")," changes data, it is included with other changing requests like ",(0,s.kt)("inlineCode",{parentName:"p"},"delete")," in a changeset:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const {\n  materialBomApi,\n  operations: { deleteBomHeaderWithEcn }\n} = billOfMaterialV2Service();\n\nasync function batchExample(billOfMaterial: string) {\n  const functionRequestBuilder = deleteBomHeaderWithEcn({ billOfMaterial });\n  const updateRequestBuilder = materialBomApi\n    .requestBuilder()\n    .update(materialBomApi.entityBuilder().fromJson({ billOfMaterial }));\n\n  // Execute batch request with one changeset\n  const batchResponses = await batch(\n    changeset(functionRequestBuilder, updateRequestBuilder)\n  ).execute(destination);\n\n  // Get response for the changeset request\n  const changesetResponse = batchResponses[0];\n\n  // ...\n}\n")))}c.isMDXComponent=!0},49570:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/v2/request-builder",id:"features/odata/v2/request-builder",title:"request-builder",description:"The function import request builder helps build a request for service operations including their parameters.",source:"@site/docs-js/features/odata/v2/request-builder.mdx",sourceDirName:"features/odata/v2",slug:"/features/odata/v2/request-builder",permalink:"/cloud-sdk/docs/js/features/odata/v2/request-builder",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/v2/request-builder.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"The function import request builder helps build a request for service operations including their parameters.\nNot all services expose function imports.\nThe example uses the ",(0,s.kt)("a",{parentName:"p",href:"https://api.sap.com/api/API_WHSE_OUTB_DLV_ORDER/resource"},"Warehouse Outbound Delivery Order service"),".\nTo learn how to generate an API client from the service definition, look at ",(0,s.kt)("a",{parentName:"p",href:"/cloud-sdk/docs/js/features/odata/generate-client"},"this article"),"."),(0,s.kt)("p",null,"The example below creates a function import request builder for the service operation ",(0,s.kt)("inlineCode",{parentName:"p"},"PostGoodsIssue")," and then executes it against your destination."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const {\n  operations: { postGoodsIssue }\n} = warehouseOutboundDeliveryOrderService();\n\npostGoodsIssue({ outboundDeliveryOrder: 'order' }).execute(destination);\n")),(0,s.kt)("p",null,"The service operation is defined in the service metadata."),(0,s.kt)("p",null,"If the response structure does not match the transformation type, the promise from ",(0,s.kt)("inlineCode",{parentName:"p"},"execute(destination)")," will be resolved into ",(0,s.kt)("inlineCode",{parentName:"p"},"undefined"),"."),(0,s.kt)("p",null,"The default transformer expects the following response format:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "d": {\n    "Count": 0\n  }\n}\n')),(0,s.kt)("p",null,"Assume the actual response has an additional layer ",(0,s.kt)("inlineCode",{parentName:"p"},"Foo"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "d": {\n    "Foo": {\n      "Count": 0\n    }\n  }\n}\n')),(0,s.kt)("p",null,"In this case, ",(0,s.kt)("inlineCode",{parentName:"p"},"dataAccessor")," can be used in the following way to modify the response into the desired form for further deserialization."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"functionImportRequestBuilder.execute(destination, data => data.d.Foo);\n")))}c.isMDXComponent=!0},97797:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={},o=void 0,i={unversionedId:"features/odata/v2/select",id:"features/odata/v2/select",title:"select",description:"When reading entities, the API offers select( ... ) on the builders.",source:"@site/docs-js/features/odata/v2/select.mdx",sourceDirName:"features/odata/v2",slug:"/features/odata/v2/select",permalink:"/cloud-sdk/docs/js/features/odata/v2/select",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/v2/select.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[],d={toc:l};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"When reading entities, the API offers ",(0,s.kt)("inlineCode",{parentName:"p"},"select( ... )")," on the builders.\nThrough it, the query parameters ",(0,s.kt)("inlineCode",{parentName:"p"},"$select")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"$expand")," are set.\nIt restricts the response to the given selection of properties in the request."),(0,s.kt)("p",null,"The properties that can be selected or expanded are represented via fields on the ",(0,s.kt)("inlineCode",{parentName:"p"},"schema")," property of the entity API class.\nThere will be a field for each property, e.g. the ",(0,s.kt)("inlineCode",{parentName:"p"},"businessPartnerApi")," has ",(0,s.kt)("inlineCode",{parentName:"p"},"schema.FIRST_NAME")," as a representation of a property and ",(0,s.kt)("inlineCode",{parentName:"p"},"schema.TO_BUSINESS_PARTNER_ADDRESS")," as a representation of a navigation property."),(0,s.kt)("p",null,"A navigation property means that there is a relation between a business partner and their addresses.\nIn this case, one business partner can have multiple addresses.\nIn SAP S/4HANA, navigation properties typically start with ",(0,s.kt)("inlineCode",{parentName:"p"},"TO_"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const { businessPartnerApi } = businessPartnerService();\nbusinessPartnerApi\n  .requestBuilder()\n  .getAll()\n  .select(\n    businessPartnerApi.schema.FIRST_NAME,\n    businessPartnerApi.schema.LAST_NAME,\n    businessPartnerApi.schema.TO_BUSINESS_PARTNER_ADDRESS\n  )\n  .execute(destination);\n")),(0,s.kt)("p",null,"The above translates to the following query parameters:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"$select=FirstName,LastName,to_BusinessPartnerAddress/*&$expand=to_BusinessPartnerAddress\n")),(0,s.kt)("p",null,"One can also select properties of the expanded navigation property:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const { businessPartnerApi, businessPartnerAddressApi } =\n  businessPartnerService();\nbusinessPartnerApi\n  .requestBuilder()\n  .getAll()\n  .select(\n    businessPartnerApi.schema.FIRST_NAME,\n    businessPartnerApi.schema.TO_BUSINESS_PARTNER_ADDRESS.select(\n      businessPartnerAddressApi.schema.ADDRESS_ID,\n      businessPartnerAddressApi.schema.CITY_CODE\n    )\n  )\n  .execute(destination);\n")),(0,s.kt)("p",null,"The above translates to the following query parameters:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"$select=FirstName,to_BusinessPartnerAddress/AddressID,to_BusinessPartnerAddress/CityCode&$expand=to_BusinessPartnerAddress\n")))}c.isMDXComponent=!0},41609:(e,t,n)=>{n.d(t,{Ol:()=>d,Vx:()=>h,WD:()=>p,Xc:()=>f,nc:()=>c,zl:()=>m});var a=n(67294),s=n(31477),r=n(47975),o=n(39173),i=n(53396),u=n(95271),l=n(19948);function d(){return a.createElement(s.default,null)}function c(){return a.createElement(r.default,null)}function p(){return a.createElement(o.default,null)}function m(){return a.createElement(i.default,null)}function f(){return a.createElement(u.default,null)}function h(){return a.createElement(l.default,null)}},43591:(e,t,n)=>{n.d(t,{P2:()=>f,S$:()=>m,as:()=>p,dD:()=>c,iU:()=>h,n3:()=>k,yq:()=>g});var a=n(67294),s=n(89465),r=n(13588),o=n(41974),i=n(33762),u=n(45480),l=n(87985),d=n(43277);function c(){return a.createElement(s.default,null)}function p(){return a.createElement(r.default,null)}function m(){return a.createElement(o.default,null)}function f(){return a.createElement(d.default,null)}function h(){return a.createElement(u.default,null)}function k(){return a.createElement(l.default,null)}function g(){return a.createElement(i.default,null)}},71772:(e,t,n)=>{n.d(t,{DD:()=>p,JH:()=>f,K7:()=>d,Lp:()=>m,S4:()=>c,du:()=>h});var a=n(67294),s=n(30504),r=n(90704),o=n(30453),i=n(50840),u=n(96465),l=n(66958);function d(){return a.createElement(s.default,null)}function c(){return a.createElement(r.default,null)}function p(){return a.createElement(o.default,null)}function m(){return a.createElement(i.default,null)}function f(){return a.createElement(u.default,null)}function h(){return a.createElement(l.default,null)}},70727:(e,t,n)=>{n.d(t,{A:()=>i,t:()=>o});var a=n(67294),s=n(99138),r=n(19077);function o(){return a.createElement(s.default,null)}function i(){return a.createElement(r.default,null)}},88207:(e,t,n)=>{n.d(t,{$P:()=>u,RJ:()=>l,VP:()=>i});var a=n(67294),s=n(46890),r=n(32750),o=n(33964);function i(){return a.createElement(r.default,null)}function u(){return a.createElement(s.default,null)}function l(){return a.createElement(o.default,null)}},5068:(e,t,n)=>{n.d(t,{BN:()=>w,HG:()=>v,LH:()=>C,M2:()=>N,Qj:()=>g,XF:()=>k,_1:()=>y,aC:()=>T,iY:()=>A,ls:()=>P,qs:()=>b,yy:()=>q});var a=n(67294),s=n(44565),r=n(77509),o=n(76580),i=n(93154),u=n(51614),l=n(87104),d=n(12350),c=n(58924),p=n(58176),m=n(69178),f=n(22166),h=n(54374);function k(){return a.createElement(s.default,null)}function g(){return a.createElement(r.default,null)}function y(){return a.createElement(o.default,null)}function b(){return a.createElement(i.default,null)}function v(){return a.createElement(u.default,null)}function N(){return a.createElement(l.default,null)}function C(){return a.createElement(d.default,null)}function q(){return a.createElement(c.default,null)}function w(){return a.createElement(p.default,null)}function T(){return a.createElement(m.default,null)}function P(){return a.createElement(f.default,null)}function A(){return a.createElement(h.default,null)}},10239:(e,t,n)=>{n.d(t,{Sl:()=>f,_P:()=>h,d$:()=>p,e4:()=>d,hI:()=>c,wn:()=>m});var a=n(67294),s=n(92497),r=n(13238),o=n(63275),i=n(99225),u=n(42236),l=n(28018);function d(){return a.createElement(s.default,null)}function c(){return a.createElement(r.default,null)}function p(){return a.createElement(o.default,null)}function m(){return a.createElement(i.default,null)}function f(){return a.createElement(u.default,null)}function h(){return a.createElement(l.default,null)}},85162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(67294),s=n(86010);const r="tabItem_Ymn6";function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,s.Z)(r,o),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>C});var a=n(87462),s=n(67294),r=n(86010),o=n(12466),i=n(76775),u=n(91980),l=n(67392),d=n(50012);function c(e){return function(e){return s.Children.map(e,(e=>{if((0,s.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:s}}=e;return{value:t,label:n,attributes:a,default:s}}))}function p(e){const{values:t,children:n}=e;return(0,s.useMemo)((()=>{const e=t??c(n);return function(e){const t=(0,l.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:n}=e;const a=(0,i.k6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,u._X)(r),(0,s.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(a.location.search);t.set(r,e),a.replace({...a.location,search:t.toString()})}),[r,a])]}function h(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,r=p(e),[o,i]=(0,s.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:r}))),[u,l]=f({queryString:n,groupId:a}),[c,h]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,r]=(0,d.Nk)(n);return[a,(0,s.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:a}),k=(()=>{const e=u??c;return m({value:e,tabValues:r})?e:null})();(0,s.useLayoutEffect)((()=>{k&&i(k)}),[k]);return{selectedValue:o,selectValue:(0,s.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);i(e),l(e),h(e)}),[l,h,r]),tabValues:r}}var k=n(72389);const g="tabList__CuJ",y="tabItem_LNqP";function b(e){let{className:t,block:n,selectedValue:i,selectValue:u,tabValues:l}=e;const d=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.o5)(),p=e=>{const t=e.currentTarget,n=d.indexOf(t),a=l[n].value;a!==i&&(c(t),u(a))},m=e=>{var t;let n=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const t=d.indexOf(e.currentTarget)+1;n=d[t]??d[0];break}case"ArrowLeft":{const t=d.indexOf(e.currentTarget)-1;n=d[t]??d[d.length-1];break}}null==(t=n)||t.focus()};return s.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},t)},l.map((e=>{let{value:t,label:n,attributes:o}=e;return s.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>d.push(e),onKeyDown:m,onClick:p},o,{className:(0,r.Z)("tabs__item",y,null==o?void 0:o.className,{"tabs__item--active":i===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:a}=e;if(n=Array.isArray(n)?n:[n],t){const e=n.find((e=>e.props.value===a));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return s.createElement("div",{className:"margin-top--md"},n.map(((e,t)=>(0,s.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function N(e){const t=h(e);return s.createElement("div",{className:(0,r.Z)("tabs-container",g)},s.createElement(b,(0,a.Z)({},e,t)),s.createElement(v,(0,a.Z)({},e,t)))}function C(e){const t=(0,k.Z)();return s.createElement(N,(0,a.Z)({key:String(t)},e))}}}]);