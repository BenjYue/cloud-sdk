"use strict";(self.webpackChunksap_cloud_sdk_documentation=self.webpackChunksap_cloud_sdk_documentation||[]).push([[1889],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=o.createContext({}),l=function(e){var t=o.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return o.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=l(n),m=r,f=p["".concat(u,".").concat(m)]||p[m]||d[m]||a;return n?o.createElement(f,i(i({ref:t},c),{},{components:n})):o.createElement(f,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=p;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3327:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var o=n(87462),r=(n(67294),n(3905));const a={},i=void 0,s={unversionedId:"features/odata/v4/request-builder",id:"features/odata/v4/request-builder",title:"request-builder",description:"OData supports operations, called actions and functions.",source:"@site/docs-js/features/odata/v4/request-builder.mdx",sourceDirName:"features/odata/v4",slug:"/features/odata/v4/request-builder",permalink:"/cloud-sdk/docs/js/v3/features/odata/v4/request-builder",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/v4/request-builder.mdx",tags:[],version:"current",frontMatter:{}},u={},l=[{value:"Using Operations",id:"using-operations",level:3},{value:"Response Transformation",id:"response-transformation",level:3}],c={toc:l};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"OData supports operations, called actions and functions."),(0,r.kt)("p",null,"Actions may have side-effects, functions may not have side-effects."),(0,r.kt)("p",null,"Actions and functions work quite similar but have differences in some details.\nIn the following, ",(0,r.kt)("em",{parentName:"p"},"operations")," refers to something that applies both to ",(0,r.kt)("em",{parentName:"p"},"functions")," and ",(0,r.kt)("em",{parentName:"p"},"actions"),"."),(0,r.kt)("p",null,"Operations can be ",(0,r.kt)("em",{parentName:"p"},"bound")," or ",(0,r.kt)("em",{parentName:"p"},"unbound"),'.\nBound means that the operation is tied to an entity.\nThis is similar to how a method is tied to a class instance in object oriented languages, while functions or "static" methods are not tied to an instance.'),(0,r.kt)("p",null,"To learn how to generate an API client from the service definition, look at ",(0,r.kt)("a",{parentName:"p",href:"/cloud-sdk/docs/js/v3/features/odata/generate-client"},"this article"),"."),(0,r.kt)("h3",{id:"using-operations"},"Using Operations"),(0,r.kt)("p",null,"Bound operations are generated into their respective entity class."),(0,r.kt)("p",null,"They can be called on the entity class like in the following example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const { catalogApi } = catalogService();\n\nconst entity = catalogApi.requestBuilder().getByKey(42).execute(destination);\n\nentity.boundActionWithoutArguments({}).execute(destination);\nentity\n  .boundActionWithArguments({ argument1: 'foo', argument2: 'bar' })\n  .execute(destination);\n\nentity.boundFunctionWithoutArguments({}).execute(destination);\nentity\n  .boundFunctionWithArguments({ argument1: 'foo', argument2: 'bar' })\n  .execute(destination);\n")),(0,r.kt)("p",null,"Unbound actions and functions are generated into ",(0,r.kt)("inlineCode",{parentName:"p"},"operations"),"."),(0,r.kt)("p",null,"The following code snippet shows the syntax for using them:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const {\n  operations: {\n    unboundActionWithArguments,\n    unboundActionWithoutArguments,\n    unboundFunctionWithArguments,\n    unboundFunctionWithoutArguments\n  }\n} = catalogService();\n\nunboundActionWithoutArguments({}).execute(destination);\nunboundActionWithArguments({ argument1: 'foo', argument2: 'bar' }).execute(\n  destination\n);\n\nunboundFunctionWithoutArguments({}).execute(destination);\nunboundFunctionWithArguments({ argument1: 'foo', argument2: 'bar' }).execute(\n  destination\n);\n")),(0,r.kt)("h3",{id:"response-transformation"},"Response Transformation"),(0,r.kt)("p",null,"If the response structure does not match the transformation type, the promise from ",(0,r.kt)("inlineCode",{parentName:"p"},"execute(destination)")," will be resolved into ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined"),"."),(0,r.kt)("p",null,"The default transformer expects the following response format:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "d": {\n    "Count": 0\n  }\n}\n')),(0,r.kt)("p",null,"Assume the actual response has an additional layer ",(0,r.kt)("inlineCode",{parentName:"p"},"Foo"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "d": {\n    "Foo": {\n      "Count": 0\n    }\n  }\n}\n')),(0,r.kt)("p",null,"In this case, ",(0,r.kt)("inlineCode",{parentName:"p"},"dataAccessor")," can be used in the following way to modify the response into the desired form for further deserialization."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"functionImportRequestBuilder.execute(destination, data => data.d.Foo);\n")))}d.isMDXComponent=!0}}]);