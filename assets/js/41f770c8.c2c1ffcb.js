"use strict";(self.webpackChunksap_cloud_sdk_documentation=self.webpackChunksap_cloud_sdk_documentation||[]).push([[7785],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=i,h=d["".concat(l,".").concat(m)]||d[m]||c[m]||r;return n?a.createElement(h,o(o({ref:t},u),{},{components:n})):a.createElement(h,o({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},42456:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var a=n(87462),i=(n(67294),n(3905));const r={title:"Develop your App for Kubernetes with SAP Gardener and Java SDK",id:"kubernetes-gardener",sidebar_label:"Kubernetes with SAP Gardener",description:"Learn how to develop with SAP Cloud SDK for Java for Kubernetes environment backed by SAP Gardener",keywords:["sap","cloud","sdk","cloud native","cloud sdk","sap cloud sdk","kubernetes","java","k8s","gardener"]},o=void 0,s={unversionedId:"environments/kubernetes-gardener",id:"environments/kubernetes-gardener",title:"Develop your App for Kubernetes with SAP Gardener and Java SDK",description:"Learn how to develop with SAP Cloud SDK for Java for Kubernetes environment backed by SAP Gardener",source:"@site/docs-java/environments/gardener.mdx",sourceDirName:"environments",slug:"/environments/kubernetes-gardener",permalink:"/cloud-sdk/docs/java/environments/kubernetes-gardener",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-java/environments/gardener.mdx",tags:[],version:"current",frontMatter:{title:"Develop your App for Kubernetes with SAP Gardener and Java SDK",id:"kubernetes-gardener",sidebar_label:"Kubernetes with SAP Gardener",description:"Learn how to develop with SAP Cloud SDK for Java for Kubernetes environment backed by SAP Gardener",keywords:["sap","cloud","sdk","cloud native","cloud sdk","sap cloud sdk","kubernetes","java","k8s","gardener"]},sidebar:"docsJavaSidebar",previous:{title:"Cloud Foundry",permalink:"/cloud-sdk/docs/java/environments/cloud-foundry"},next:{title:"Kubernetes with SAP Kyma",permalink:"/cloud-sdk/docs/java/environments/kubernetes-kyma"}},l={},p=[{value:"SAP Cloud SDK Features Supported on SAP Gardener",id:"sap-cloud-sdk-features-supported-on-sap-gardener",level:2},{value:"Getting Started with the SAP Cloud SDK on Gardener",id:"getting-started-with-the-sap-cloud-sdk-on-gardener",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Containerize the Application",id:"containerize-the-application",level:3},{value:"Create a Kubernetes Deployment",id:"create-a-kubernetes-deployment",level:3},{value:"Create an Ingress",id:"create-an-ingress",level:3},{value:"Access Your Application",id:"access-your-application",level:3},{value:"Bind SAP BTP Services to the Application",id:"bind-sap-btp-services-to-the-application",level:3},{value:"Bind the Destination Service",id:"bind-the-destination-service",level:4},{value:"Bind the Identity and Authentication Service",id:"bind-the-identity-and-authentication-service",level:4},{value:"On-Premise Connectivity",id:"on-premise-connectivity",level:2},{value:"1. Using Transparent and Connectivity Proxies",id:"1-using-transparent-and-connectivity-proxies",level:3},{value:"Prerequisites",id:"prerequisites-1",level:4},{value:"Background Information",id:"background-information",level:4},{value:"Create a Kubernetes Resource",id:"create-a-kubernetes-resource",level:4},{value:"Executing Requests",id:"executing-requests",level:4},{value:"2. Using the Connectivity Proxy",id:"2-using-the-connectivity-proxy",level:3},{value:"Prerequisites",id:"prerequisites-2",level:4},{value:"Create a Kubernetes Secret",id:"create-a-kubernetes-secret",level:3},{value:"Excursion: Debug Kubernetes App From Your Local IDE",id:"excursion-debug-kubernetes-app-from-your-local-ide",level:2}],u={toc:p};function c(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://gardener.cloud/"},"SAP Gardener")," is a managed Kubernetes service by SAP developed as an Open Source project.\nIt helps create and manage multiple Kubernetes clusters with less effort by abstracting environment specifics to deliver the same homogeneous Kubernetes-native DevOps experience everywhere."),(0,i.kt)("p",null,"The SAP Cloud SDK for Java supports SAP Gardener-based Kubernetes clusters out of the box."),(0,i.kt)("h2",{id:"sap-cloud-sdk-features-supported-on-sap-gardener"},"SAP Cloud SDK Features Supported on SAP Gardener"),(0,i.kt)("p",null,"Find below the list of features we currently support:\nLegend: \u2705 - supported, \u2757- partially supported, \u274c - not supported"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u2705 Consume SAP BTP services like Destination, Connectivity, IAS, XSUAA, and others"),(0,i.kt)("li",{parentName:"ul"},"\u2705 Multitenancy"),(0,i.kt)("li",{parentName:"ul"},"\u2705 Resilience & Caching"),(0,i.kt)("li",{parentName:"ul"},"\u2705 Connect to and consume services from SAP S/4HANA Cloud"),(0,i.kt)("li",{parentName:"ul"},"\u2757 Connect to and consume services from SAP S/4HANA On-Premise"),(0,i.kt)("li",{parentName:"ul"},"\u2705 Seamless use of typed clients provided by the SAP Cloud SDK")),(0,i.kt)("h2",{id:"getting-started-with-the-sap-cloud-sdk-on-gardener"},"Getting Started with the SAP Cloud SDK on Gardener"),(0,i.kt)("p",null,"This detailed guide will help get your SAP Cloud SDK Java application up and running in the SAP Gardener-based Kubernetes cluster.\nYou can also use this guide to migrate your existing application to Kubernetes."),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"For additional information on more deployment options you can also check out the ",(0,i.kt)("a",{parentName:"p",href:"http://localhost:3000/cloud-sdk/docs/js/guides/migrate-sdk-application-from-btp-cf-to-kubernetes#configure-tls-and-obtain-a-domain-in-sap-gardener"},"guide for JavaScript"),".")),(0,i.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("p",null,"To follow this guide you will need:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A ",(0,i.kt)("a",{parentName:"li",href:"https://gardener.cloud/"},"Gardener")," managed cluster"),(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/SAP/sap-btp-service-operator/"},"SAP BTP Service Operator")," installed in the Cluster (minimum version ",(0,i.kt)("inlineCode",{parentName:"li"},"0.2.3"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.docker.com/"},"Docker")," and a publicly reachable Docker repository"),(0,i.kt)("li",{parentName:"ul"},"A ",(0,i.kt)("a",{parentName:"li",href:"https://spring.io/projects/spring-boot"},"Spring Boot")," Application using the SAP Cloud SDK")),(0,i.kt)("p",null,"Check out the details below in case you are uncertain about any of the prerequisites."),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Gardener Cluster"),(0,i.kt)("p",null,"This guide assumes you have created a cluster via Gardener dashboard, have ",(0,i.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/tasks/tools/#kubectl"},"Kubernetes CLI")," installed on your local machine and have it set up for cluster access."),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Running ",(0,i.kt)("inlineCode",{parentName:"p"},"kubectl cluster-info")," should print out your cluster endpoints."),(0,i.kt)("p",{parentName:"admonition"},"In case you haven't set this up you can do so by downloading a ",(0,i.kt)("inlineCode",{parentName:"p"},"kubeconfig")," from your Gardener dashboard.\nYou can read more about accessing clusters using ",(0,i.kt)("inlineCode",{parentName:"p"},"kubeconfig")," on the ",(0,i.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/"},"Kubernetes documentation"))),(0,i.kt)("p",null,"We also recommend to have an Ingress set up that exposes the application to the internet.\nYou can read more about configuring an Ingress on the ",(0,i.kt)("a",{parentName:"p",href:"https://gardener.cloud/docs/guides/applications/service-access/#loadbalancer-vs-ingress"},"Gardener documentation"),".")),(0,i.kt)("details",null,(0,i.kt)("summary",null,"SAP BTP Service Operator"),(0,i.kt)("p",null,"This guide assumes you have the ",(0,i.kt)("a",{parentName:"p",href:"https://help.sap.com/viewer/09cc82baadc542a688176dce601398de/Cloud/en-US/b5a35bfa87b5444080e6e6e6d361fa20.html"},"SAP BTP Service Operator")," installed in your cluster.\nThe operator is used to create and bind service instances.\nThe same can also be achieved via the ",(0,i.kt)("a",{parentName:"p",href:"https://help.sap.com/viewer/09cc82baadc542a688176dce601398de/Cloud/en-US/20195bf3b6e64189966e08f669c275e1.html"},"Service Catalog"),".\nHowever, this guide will focus on the Service Operator usage."),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"In case you don't have it installed please follow the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/SAP/sap-btp-service-operator#sap-business-technology-platform-sap-btp-service-operator-for-kubernetes"},"documentation")," to install it."))),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Docker"),(0,i.kt)("p",null,"This guide assumes you have ",(0,i.kt)("a",{parentName:"p",href:"https://www.docker.com/"},"Docker")," installed on your local machine."),(0,i.kt)("p",null,"Furthermore, you need a ",(0,i.kt)("strong",{parentName:"p"},"Docker repository")," where you can store images.\nThe repository needs to be publicly accessible in order for the cluster to access and download the Docker image we are going to create."),(0,i.kt)("p",null,"In case you don't have such a repository yet we recommend either:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://hub.docker.com/"},"Docker Hub")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://common.repositories.cloud.sap/ui/"},"Artifactory DMZ")," (for SAP internal developers)")),(0,i.kt)("p",null,"Access to images in a repository may be limited to authenticated and/or authorized users, depending on your configuration."),(0,i.kt)("p",null,"Make sure you are logged in to your repository on your local machine by running:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"docker login (your-repo) --username=(your-username)\n")),(0,i.kt)("p",null,"And check your configuration which is usually located under ",(0,i.kt)("inlineCode",{parentName:"p"},"(your-home-directory)/.docker/config.json"),"."),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"In case AuthN/AuthZ is required to download images make sure you have a ",(0,i.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/#create-a-secret-by-providing-credentials-on-the-command-line"},"secret configured in your cluster"),":"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl create secret docker-registry (name-of-the-secret) --docker-username=(username) --docker-password=(API-token) --docker-server=(your-repo)\n")))),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Application using the SAP Cloud SDK"),(0,i.kt)("p",null,"If you don't have an application already you can comfortably ",(0,i.kt)("a",{parentName:"p",href:"../getting-started"},"create one from our archetypes"),".")),(0,i.kt)("h3",{id:"containerize-the-application"},"Containerize the Application"),(0,i.kt)("p",null,"To run on Kubernetes the application needs to be shipped in a container.\nFor this guide we will be using Docker."),(0,i.kt)("p",null,"Create a ",(0,i.kt)("inlineCode",{parentName:"p"},"Dockerfile")," in the project root directory:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dockerfile",metastring:"{2}","{2}":!0},'FROM openjdk:8-jdk-alpine\nARG JAR_FILE=application/target/*.jar\nCOPY ${JAR_FILE} app.jar\nENTRYPOINT ["java","-jar","/app.jar"]\nEXPOSE 8080\n')),(0,i.kt)("p",null,"If needed, update the ",(0,i.kt)("inlineCode",{parentName:"p"},"JAR_FILE")," to point to your JAR file."),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"You can find more information on how to containerize Spring Boot applications in ",(0,i.kt)("a",{parentName:"p",href:"https://spring.io/guides/gs/spring-boot-docker/"},"this guide")," (in particular, check the ",(0,i.kt)("em",{parentName:"p"},"Containerize It")," section).")),(0,i.kt)("p",null,"Compile and push the image by running:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"docker build -t <your-repo>/<your-image-name> .\ndocker push <your-repo>/<your-image-name>\n")),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"In case you are facing authorization issues when pushing to your repository refer to the dedicated section under ",(0,i.kt)("a",{parentName:"p",href:"#prerequisites"},"Prerequisites"),".")),(0,i.kt)("h3",{id:"create-a-kubernetes-deployment"},"Create a Kubernetes Deployment"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Create a new YAML file describing the Kubernetes deployment:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-yml",metastring:'title="deployment.yml" {18,32}',title:'"deployment.yml"',"{18,32}":!0},"---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: my-app-deployment\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: my-app\n  template:\n    metadata:\n      labels:\n        app: my-app\n    spec:\n      containers:\n        # Configure the docker image you just pushed to your repository here\n        - image: <your-repo>/<your-image>:latest\n          name: my-app\n          imagePullPolicy: Always\n          resources:\n            requests:\n              memory: '1Gi'\n              cpu: '500m'\n            limits:\n              memory: '1.5Gi'\n              cpu: '750m'\n          # Volume mounts needed for injecting BTP service credentials\n          volumeMounts:\n      imagePullSecrets:\n        # In case your repository requires a login, reference your secret here\n        - name: <your-secret-for-docker-login>\n      # Volumes containing BTP serice credentials from secrets\n      volumes:\n---\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: my-app\n  name: my-app\n  namespace: default\nspec:\n  type: NodePort\n  ports:\n    - port: 8080\n  selector:\n    app: my-app\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Install the configuration via ",(0,i.kt)("inlineCode",{parentName:"p"},"kubectl apply -f deployment.yml"),".")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Monitor the status of the deployment by running: ",(0,i.kt)("inlineCode",{parentName:"p"},"kubectl get deployment my-app-deployment"),"."))),(0,i.kt)("p",null,"Eventually, you should see an output similar to:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ kubectl get deployment my-app-deployment\n\nNAME                READY   UP-TO-DATE   AVAILABLE   AGE\nmy-app-deployment   1/1     1            1           15s\n")),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"In case something went wrong use ",(0,i.kt)("inlineCode",{parentName:"p"},"kubectl describe")," together with ",(0,i.kt)("inlineCode",{parentName:"p"},"deployment")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"pod")," to get more information about the status of your application.")),(0,i.kt)("h3",{id:"create-an-ingress"},"Create an Ingress"),(0,i.kt)("p",null,"To make your application available from outside the cluster we will create an Ingress."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"In case you already have an Ingress configured in your cluster only add the new ",(0,i.kt)("inlineCode",{parentName:"p"},"rule")," for your new applications."),(0,i.kt)("p",{parentName:"admonition"},"You can read more about configuring an Ingress on the ",(0,i.kt)("a",{parentName:"p",href:"https://gardener.cloud/docs/guides/applications/service-access/#loadbalancer-vs-ingress"},"Gardener documentation"),".")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Create a new YAML file containing the following Ingress configuration:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml",metastring:'title="ingress.yml" {12-13,16}',title:'"ingress.yml"',"{12-13,16}":!0},'---\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: ingress-router\n  namespace: default\n  annotations:\n  # cert.gardener.cloud/purpose: managed\nspec:\n  tls:\n    - hosts:\n      # - "<your-cluster-host>"\n      # - "*.ingress.<your-cluster-host>"\n    # secretName: secret-tls\n  rules:\n    - host: \'my-app.ingress.<your-cluster-host>\'\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: my-app\n                port:\n                  number: 8080\n')),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Install the configuration via ",(0,i.kt)("inlineCode",{parentName:"p"},"kubectl apply -f ingress.yml"),".")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Verify the Ingress is up and running: ",(0,i.kt)("inlineCode",{parentName:"p"},"kubectl describe ingress ingress-router")))),(0,i.kt)("p",null,"You should see an entry with the path ",(0,i.kt)("inlineCode",{parentName:"p"},"/")," pointing to the backend ",(0,i.kt)("inlineCode",{parentName:"p"},"my-app"),"."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"In case something went wrong and you are struggling to configure the Ingress you can also come back and set it up later.\nThe Ingress is a convenient way to access your application.\nIt is not strictly required for the rest of this guide.")),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Recommended: Configure TLS for your Ingress"),(0,i.kt)("p",null,"Enable the NGINX Ingress add-on in your Gardener dashboard.\nThe process may take a few minutes.\nAfterwards, you should see a domain in the dashboard as well as a Kubernetes secret ",(0,i.kt)("inlineCode",{parentName:"p"},"secret-tls"),"."),(0,i.kt)("p",null,"Un-comment the 4 lines in the YAML above using the generated domain and secret.\nThen re-deploy the configuration as usual.\nYour cluster endpoint should now be trusted by your browser.")),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"We highly recommended enabling TLS for your cluster endpoints.\nIt ensures your client (e.g. browser) can verify the cluster's identity.")),(0,i.kt)("h3",{id:"access-your-application"},"Access Your Application"),(0,i.kt)("p",null,"At this point take a moment to verify you can access your application.\nUse the host you have defined in your Ingress rule in a browser or other tool of your choice (e.g. Postman).\nIn case you started with an SAP Cloud SDK Archetype your should be greeted with a welcome page under the root path."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"In case you skipped setting up an Ingress before you can use port forwarding to access your application."),(0,i.kt)("p",{parentName:"admonition"},"Identify the pod name of your application with ",(0,i.kt)("inlineCode",{parentName:"p"},"kubectl get pods"),".\nThen enable port forwarding to it by running: ",(0,i.kt)("inlineCode",{parentName:"p"},"kubectl port-forward (your-pod-name) 8080:8080"),".\nWith that you should be able to access the application on your ",(0,i.kt)("inlineCode",{parentName:"p"},"http://localhost:8080"))),(0,i.kt)("h3",{id:"bind-sap-btp-services-to-the-application"},"Bind SAP BTP Services to the Application"),(0,i.kt)("p",null,"The SAP Business Technology Platform offers various services that can be used by applications.\nTo access services from a Kubernetes environment instances have to be created and bound to the application."),(0,i.kt)("p",null,"For this guide we'll assume we want to use two services:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Destination Service"),(0,i.kt)("li",{parentName:"ol"},"Identity and Authentication Service (IAS)")),(0,i.kt)("h4",{id:"bind-the-destination-service"},"Bind the Destination Service"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Create a new YAML file:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml",metastring:'title="destination-service.yaml"',title:'"destination-service.yaml"'},"---\napiVersion: services.cloud.sap.com/v1\nkind: ServiceInstance\nmetadata:\n  name: destination-service\nspec:\n  serviceOfferingName: destination\n  servicePlanName: lite\n  externalName: default-destination-service\n---\napiVersion: services.cloud.sap.com/v1\nkind: ServiceBinding\nmetadata:\n  name: my-destination-service-binding\nspec:\n  serviceInstanceName: destination-service\n  secretName: my-destination-service-secret\n")),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Install the configuration via ",(0,i.kt)("inlineCode",{parentName:"p"},"kubectl apply -f destination-service.yml"),".")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Monitor the status via ",(0,i.kt)("inlineCode",{parentName:"p"},"kubectl describe ServiceInstance destination-service"),".\nEventually this should automatically create a Kubernetes secret named ",(0,i.kt)("inlineCode",{parentName:"p"},"my-destination-service-secret"),".\nThis secret will contain the actual service binding information.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Mount the ",(0,i.kt)("inlineCode",{parentName:"p"},"my-destination-service-secret")," secret into the file system of the application as follows:"),(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Find the empty list of ",(0,i.kt)("inlineCode",{parentName:"p"},"volumes")," at the end of your ",(0,i.kt)("inlineCode",{parentName:"p"},"deployment.yml"),".\nAdd a new volume, referencing the secret:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-yml",metastring:'title="volumes:"',title:'"volumes:"'},"- name: my-destination-service-binding-volume\n  secret:\n    secretName: my-destination-service-secret\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Mount this volume into the file system of your application.\nAdd it to the empty list of ",(0,i.kt)("inlineCode",{parentName:"p"},"volumeMounts")," in the ",(0,i.kt)("inlineCode",{parentName:"p"},"container")," section of your ",(0,i.kt)("inlineCode",{parentName:"p"},"deployment.yml"),":"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-yml",metastring:'title="volumeMounts:"',title:'"volumeMounts:"'},"- name: my-destination-service-binding-volume\n  mountPath: '/etc/secrets/sapbtp/my-destination-service'\n  readOnly: true\n"))))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Update the configuration via ",(0,i.kt)("inlineCode",{parentName:"p"},"kubectl apply -f deployment.yml"),"."))),(0,i.kt)("h4",{id:"bind-the-identity-and-authentication-service"},"Bind the Identity and Authentication Service"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Create a new ",(0,i.kt)("inlineCode",{parentName:"li"},"identity-service.yaml")," file:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml",metastring:'title="identity-service.yaml"',title:'"identity-service.yaml"'},"---\napiVersion: services.cloud.sap.com/v1\nkind: ServiceInstance\nmetadata:\n  name: my-identity-service\nspec:\n  serviceOfferingName: identity\n  servicePlanName: application\n  parameters:\n    # Allowed redirect URIs in case you want to use an approuter behind an ingress for user login\n    # oauth2-configuration:\n    #  redirect-uris:\n    #    - https://*.ingress.<your-cluster-host>/login/callback\n    consumed-services: []\n    xsuaa-cross-consumption: true\n    multi-tenant: true\n---\napiVersion: services.cloud.sap.com/v1\nkind: ServiceBinding\nmetadata:\n  name: my-identity-service-binding\nspec:\n  serviceInstanceName: my-identity-service\n  secretName: my-identity-service-secret\n")),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"Repeat the same steps 2-5 from the previous section, always replacing ",(0,i.kt)("inlineCode",{parentName:"li"},"destination")," with ",(0,i.kt)("inlineCode",{parentName:"li"},"identity"),".")),(0,i.kt)("h2",{id:"on-premise-connectivity"},"On-Premise Connectivity"),(0,i.kt)("p",null,"On Kubernetes there are generally two approaches to connect to On-Premise destinations:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Using Transparent Proxy and Connectivity Proxy"),(0,i.kt)("li",{parentName:"ol"},"Using Connectivity Proxy only")),(0,i.kt)("p",null,"Approach ",(0,i.kt)("strong",{parentName:"p"},"(1)")," simplifies the application code but does not cover all features at the time of writing."),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Constraints when using the Transparent Proxy"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Private Link not yet supported"),(0,i.kt)("li",{parentName:"ul"},"Destination names need to be known at design time",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"see the note on ",(0,i.kt)("a",{parentName:"li",href:"#create-a-kubernetes-resource"},"Create a Kubernetes Resource")))))),(0,i.kt)("p",null,"Approach ",(0,i.kt)("strong",{parentName:"p"},"(2)")," does not come with the above constraints, but imposes limitations on the operation mode."),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Constraints when using the Connectivity Proxy"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Connectivity Proxy must be operated in ",(0,i.kt)("inlineCode",{parentName:"li"},"untrusted")," mode"))),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"We generally recommend to go with approach (1) unless the given constraints apply to your use case.")),(0,i.kt)("h3",{id:"1-using-transparent-and-connectivity-proxies"},"1. Using Transparent and Connectivity Proxies"),(0,i.kt)("h4",{id:"prerequisites-1"},"Prerequisites"),(0,i.kt)("p",null,"This guide assumes you have both the ",(0,i.kt)("strong",{parentName:"p"},"Transparent Proxy")," (version ",(0,i.kt)("inlineCode",{parentName:"p"},">= 1.3.0"),") and ",(0,i.kt)("strong",{parentName:"p"},"Connectivity Proxy")," (version ",(0,i.kt)("inlineCode",{parentName:"p"},">= 2.9.2"),") installed in your cluster.\nPlease refer to ",(0,i.kt)("a",{parentName:"p",href:"https://help.sap.com/docs/CP_CONNECTIVITY/cca91383641e40ffbe03bdc78f00f681/1c18e0ca10884dad994fc3d7e1d046d7.html"},"this")," and ",(0,i.kt)("a",{parentName:"p",href:"https://help.sap.com/docs/CP_CONNECTIVITY/cca91383641e40ffbe03bdc78f00f681/23fc1100c60b45c58f09694b7f9c7700.html"},"this")," documentation on how to install it if you haven't already."),(0,i.kt)("h4",{id:"background-information"},"Background Information"),(0,i.kt)("p",null,"When using the Transparent Proxy your app performs requests against the Transparent Proxy without explicit authentication, assuming the network in your cluster can be trusted.\nThe Transparent Proxy will obtain the relevant destination from the destination service and use it to forward the request via the Connectivity Proxy to the On-Premise system.\nConsequently, your app itself does not interact with destination or connectivity service at all and thus your application pods do not require bindings to these two services."),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"This approach is conceptually different from what you may be used to from a CloufdFoundry environment.\nThe official ",(0,i.kt)("a",{parentName:"p",href:"https://help.sap.com/docs/CP_CONNECTIVITY/cca91383641e40ffbe03bdc78f00f681/e661713ef7d14373b57e3e26b0b03b86.html"},"documentation of the Transparent Proxy")," gives more information on the architecture.")),(0,i.kt)("h4",{id:"create-a-kubernetes-resource"},"Create a Kubernetes Resource"),(0,i.kt)("p",null,"Create the following YAML file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title:"example-dest.yaml"','title:"example-dest.yaml"':!0},"apiVersion: destination.connectivity.api.sap/v1\nkind: Destination\nmetadata:\n  name: example-dest\nspec:\n  destinationRef:\n    name: 'example-dest-onprem' # name from BTP Cockpit\n  destinationServiceInstanceName: dest-service-instance-example # can be ommited if config.destinationService.defaultInstanceName was provided to the helm chart of the transparent proxy upon installation\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Adjust the name ",(0,i.kt)("inlineCode",{parentName:"li"},"example-dest-onprem")," to the On-Premise destination you defined in your SAP BTP Cockpit.")),(0,i.kt)("p",null,"It will create a Kubernetes resource in your cluster, pointing to the destination you created in the cockpit.\nApply the YAML with ",(0,i.kt)("inlineCode",{parentName:"p"},"kubectl apply")," to take effect."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"This step is required for each destination that should be reachable via the Transparent Proxy.\nIf you do not create a custom Kubernetes resource of type ",(0,i.kt)("inlineCode",{parentName:"p"},"destinations.destination.connectivity.api.sap")," for a given destination, the destination will not be handled by the Transparent Proxy.")),(0,i.kt)("h4",{id:"executing-requests"},"Executing Requests"),(0,i.kt)("p",null,"In your application you can now configure a destination to execute requests:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'DefaultHttpDestination destination = DefaultHttpDestination\n        .builder("http://example-dest.namespace/")\n        // for a subscriber tenant make sure to send the tenant header:\n        // .header(new Header("X-Tenant-Id", TenantAccessor.getCurrentTenant().getTenantId()))\n        // for principal propagation make sure to set the auth type to "TOKEN_FORWARDING":\n        // .authenticationType(AuthenticationType.TOKEN_FORWARDING)\n        .build();\n\nList<SalesArea> execute = new DefaultSalesAreaService().getAllSalesArea() // example OData request\n        .execute(destination);\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Replace ",(0,i.kt)("inlineCode",{parentName:"li"},"namespace")," in the URL with the namespace you installed the Transparent Proxy into")),(0,i.kt)("p",null,"This will target the Kubernetes resource ",(0,i.kt)("inlineCode",{parentName:"p"},"example-dest")," we created above which will be resolved to the destination we configured in that resource.\nThe code above shows an example how you can use it to perform an OData request."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Repeat this process for all ",(0,i.kt)("em",{parentName:"p"},"destination names")," you want to use in your application.")),(0,i.kt)("admonition",{title:"Connecting to Cloud systems",type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"The above approach is not limited to destinations of proxy type ",(0,i.kt)("inlineCode",{parentName:"p"},"ON_PREMISE"),".\n",(0,i.kt)("inlineCode",{parentName:"p"},"INTERNET")," destinations are equally supported.")),(0,i.kt)("h3",{id:"2-using-the-connectivity-proxy"},"2. Using the Connectivity Proxy"),(0,i.kt)("h4",{id:"prerequisites-2"},"Prerequisites"),(0,i.kt)("p",null,"This guide assumes you have the Connectivity Proxy installed in the ",(0,i.kt)("a",{parentName:"p",href:"https://help.sap.com/docs/CP_CONNECTIVITY/cca91383641e40ffbe03bdc78f00f681/148bbad274e545efa10de8a356dd474d.html"},(0,i.kt)("strong",{parentName:"a"},"untrusted mode"))," in your cluster.\nIn case you used the Helm chart to install the proxy, the untrusted mode is enabled if the property ",(0,i.kt)("inlineCode",{parentName:"p"},"config.servers.proxy.http.enableProxyAuthorization")," is set to ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),".\nPlease refer to ",(0,i.kt)("a",{parentName:"p",href:"https://help.sap.com/docs/CP_CONNECTIVITY/cca91383641e40ffbe03bdc78f00f681/23fc1100c60b45c58f09694b7f9c7700.html"},"this")," documentation on how to install the Connectivity Proxy if you haven't already."),(0,i.kt)("p",null,"The untrusted mode requires a service binding or service key for an XSUAA service instance.\nMake sure you have this binding/key at hand as you will need it in the steps below."),(0,i.kt)("h3",{id:"create-a-kubernetes-secret"},"Create a Kubernetes Secret"),(0,i.kt)("p",null,"Copy the following JSON template:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:"showLineNumbers",showLineNumbers:!0},'{\n  "label": "connectivity",\n  "provider": null,\n  "plan": "lite",\n  "name": "connectivity",\n  "tags": ["connectivity", "conn", "connsvc"],\n  "instance_guid": "",\n  "instance_name": "connectivity",\n  "binding_guid": "",\n  "binding_name": null,\n  "credentials": {\n    "tenantmode": "",\n    "clientid": "",\n    "token_service_domain": "",\n    "token_service_url": "",\n    "xsappname": "",\n    "clientsecret": "",\n    "url": "",\n    "uaadomain": "",\n    "verificationkey": "",\n    "identityzone": "",\n    "tenantid": "",\n    "onpremise_proxy_port": "20003",\n    "onpremise_proxy_http_port": "20003",\n    "onpremise_socks5_proxy_port": "20004",\n    "onpremise_proxy_ldap_port": "20001",\n    "onpremise_proxy_rfc_port": "20001",\n    "onpremise_proxy_host": ""\n  }\n}\n')),(0,i.kt)("p",null,"Perform the following adjustments:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Generate two random GUIDs and fill them into the fields ",(0,i.kt)("inlineCode",{parentName:"li"},"instance_guid")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"binding_guid")),(0,i.kt)("li",{parentName:"ul"},"Fill the fields from line ",(0,i.kt)("strong",{parentName:"li"},"16-26")," with the corresponding values from the XSUAA credentials you created to run the Connectivity Proxy in untrusted mode",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"For ",(0,i.kt)("inlineCode",{parentName:"li"},"url")," use the same value as ",(0,i.kt)("inlineCode",{parentName:"li"},"token_service_url")))),(0,i.kt)("li",{parentName:"ul"},"Update ",(0,i.kt)("inlineCode",{parentName:"li"},"onpremise_proxy_host")," to contain the URL under which the Connectivity Proxy is reachable within your cluster"),(0,i.kt)("li",{parentName:"ul"},"Update the ports in case you configured custom values for them on the Connectivity Proxy")),(0,i.kt)("p",null,"Next, create a new YAML file and insert the prepared JSON object into ",(0,i.kt)("inlineCode",{parentName:"p"},"connectivity-service-key"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1\nkind: Secret\nmetadata:\n  name: connectivity-service-secret\ntype: Opaque\n   stringData:\n    connectivity-service-key: \'{\n        "label": "connectivity",\n        "provider": null,\n        ....\n      }\'\n')),(0,i.kt)("p",null,"Finally, adjust your deployment YAML to contain these two entries under ",(0,i.kt)("inlineCode",{parentName:"p"},"volumes")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"volumteMounts"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml",metastring:'title="deployment.yaml:"',title:'"deployment.yaml:"'},"  volumes:\n    - name: conectivity-service-binding-volume\n      secret:\n        secretName: connectivity-service-secret\nvolumeMounts:\n      - name: conectivity-service-binding-volume\n        mountPath: '/etc/secrets/sapbtp/connectivity/connectivity-service'\n        readOnly: true\n")),(0,i.kt)("p",null,"Apply the YAML files for the changes to take effect.\nYour app should now be ready to connect to On-Premise systems via the Connectivity Proxy."),(0,i.kt)("admonition",{title:"Troubleshooting",type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Issues about ",(0,i.kt)("em",{parentName:"p"},'"No connectivity service biding found"')," usually indicate a misconfiguration with the created secret.\nTo fix them, please double check the JSON, the secret, and the volume mounts")),(0,i.kt)("h2",{id:"excursion-debug-kubernetes-app-from-your-local-ide"},"Excursion: Debug Kubernetes App From Your Local IDE"),(0,i.kt)("p",null,"To understand some problems with an application it might be helpful to debug the application from within your IDE.\nThen you can go through the code step by step and see, where your expectations are not fulfilled anymore."),(0,i.kt)("p",null,"This excursion will guide you through the necessary steps to get your application running on your Kubernetes cluster connected to your local IDE."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Add the following parameter to your invocation of the JVM:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-text"},"-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005\n")),(0,i.kt)("p",{parentName:"li"},"As an example, let's assume that your Dockerfile has the following entrypoint:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-Dockerfile"},'ENTRYPOINT ["java","-jar","/app.jar"]\n')),(0,i.kt)("p",{parentName:"li"},"Then you can update your deployment by adding the ",(0,i.kt)("inlineCode",{parentName:"p"},"command")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"args")," properties to your image spec in your deployment.yml:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-yml"},"spec: # pod spec\n  containers:\n    - image: <your-image-spec>\n      name: <your-container-name>\n      command: ['java']\n      args:\n        [\n          '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005',\n          '-jar',\n          '/app.jar'\n        ]\n")),(0,i.kt)("p",{parentName:"li"},"This will replace the entrypoint with the given command and arguments, as described in the ",(0,i.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/"},"Kubernetes documentation"),".")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Make sure that the adjusted image is actually running in your Kubernetes Cluster.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Identify the pod you want to debug against, for example using the ",(0,i.kt)("inlineCode",{parentName:"p"},"kubectl get pods")," command.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Forward the port used in the debug String above via the following command to your local machine:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl port-forward <name-of-your-pod> 5005:5005\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Let your IDE connect against ",(0,i.kt)("inlineCode",{parentName:"p"},"localhost:5005"),".\nThe specifics of this step depend heavily on your choice of IDE, so we cannot give a fits-all solution."))))}c.isMDXComponent=!0}}]);