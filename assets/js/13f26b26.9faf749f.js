"use strict";(self.webpackChunksap_cloud_sdk_documentation=self.webpackChunksap_cloud_sdk_documentation||[]).push([[6868],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),h=i,f=p["".concat(l,".").concat(h)]||p[h]||d[h]||a;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},26614:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=n(87462),i=(n(67294),n(3905));const a={id:"csrf",title:"CSRF Fetching",hide_title:!1,hide_table_of_contents:!1,sidebar_label:"CSRF Fetching",description:"This article describes how CSRF tokens are fetched in the SDK and how you can configure the fetching.",keywords:["sap","cloud","sdk","csrf","http-client","typed OData","typed OpenApi","JavaScript","TypeScript"]},o=void 0,s={unversionedId:"features/connectivity/csrf",id:"features/connectivity/csrf",title:"CSRF Fetching",description:"This article describes how CSRF tokens are fetched in the SDK and how you can configure the fetching.",source:"@site/docs-js/features/connectivity/csrf.mdx",sourceDirName:"features/connectivity",slug:"/features/connectivity/csrf",permalink:"/cloud-sdk/docs/js/features/connectivity/csrf",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/connectivity/csrf.mdx",tags:[],version:"current",frontMatter:{id:"csrf",title:"CSRF Fetching",hide_title:!1,hide_table_of_contents:!1,sidebar_label:"CSRF Fetching",description:"This article describes how CSRF tokens are fetched in the SDK and how you can configure the fetching.",keywords:["sap","cloud","sdk","csrf","http-client","typed OData","typed OpenApi","JavaScript","TypeScript"]},sidebar:"docsJsSidebar",previous:{title:"Perform HTTP Requests",permalink:"/cloud-sdk/docs/js/features/connectivity/http-client"},next:{title:"On-Premise Systems",permalink:"/cloud-sdk/docs/js/features/connectivity/on-premise"}},l={},c=[{value:"Default Behaviour",id:"default-behaviour",level:2},{value:"Changing the Default",id:"changing-the-default",level:2}],u={toc:c};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"default-behaviour"},"Default Behaviour"),(0,i.kt)("p",null,"The SAP Cloud SDK fetches a CSRF token for non ",(0,i.kt)("inlineCode",{parentName:"p"},"GET")," requests per default.\nThis is done for all clients that the SAP Cloud SDK provides:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"./http-client#csrf-token-fetching"},"generic http-client")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../odata/v2-client#handling-of-cross-site-request-forgery-tokens"},"v2 OData clients")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../odata/v4-client#handling-of-cross-site-request-forgery-tokens"},"v4 OData clients")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../openapi/execute-request#handling-of-cross-site-request-forgery-tokens"},"OpenAPI clients"))),(0,i.kt)("p",null,"If the target system does not require a token you can disable the fetching as discussed in the sections:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"./http-client#csrf-token-fetching"},"disable for http-client")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../odata/v2-client#hskip-csrf-token-handling"},"disable for v2 OData clients")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../odata/v4-client#skip-csrf-token-handling"},"disable for v4 OData clients")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../openapi/execute-request#skip-csrf-token-handling"},"disable for OpenAPI clients"))),(0,i.kt)("p",null,"In order to retrieve a token the SAP cloud SDK makes multiple calls.\nFirst it makes a request using the resource URL adding a ",(0,i.kt)("inlineCode",{parentName:"p"},"/")," in the end:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Request:             HEAD /resource/path/\nRequest Header:      X-CSRF-Token=fetch\n")),(0,i.kt)("p",null,"If this returns a token, execute the request with the token.\nIf not, make a second call without the ",(0,i.kt)("inlineCode",{parentName:"p"},"/"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Request:             HEAD /resource/path\nRequest Header:      X-CSRF-Token=fetch\n")),(0,i.kt)("p",null,"If this returns a token, execute the request with the token.\nIf this also does not yield a token, the request is executed without an additional token.\nNote that the SAP Cloud SDK consider ",(0,i.kt)("inlineCode",{parentName:"p"},"SET-COOKIE")," headers provided the requests returning the tokens."),(0,i.kt)("p",null,"Most systems will return a CSRF token independent of an additional ",(0,i.kt)("inlineCode",{parentName:"p"},"/")," in the end.\nHowever, we saw issues for SAP S/4HANA OnPremise systems which required the ",(0,i.kt)("inlineCode",{parentName:"p"},"/")," and other systems not being able to handle the slash.\nIf performance is relevant you should check:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Does the system need a CSRF token? If not disable the fetching."),(0,i.kt)("li",{parentName:"ul"},"Does the system fail to return a CSRF with a ",(0,i.kt)("inlineCode",{parentName:"li"},"/"),"? Adjust the token fetching via a middleware.")),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"The SAP Cloud SDK will discontinue fetching CSRF tokens per default.\nFrom version 4 on you will need to add the ",(0,i.kt)("inlineCode",{parentName:"p"},"csrf()")," middleware to enable fetching.\nAlso, a failure in token fetching will stop the request execution and not silently be ignored.")),(0,i.kt)("h2",{id:"changing-the-default"},"Changing the Default"),(0,i.kt)("p",null,"If the way the SAP Cloud SDK fetches the CSRF token does not fit your needs you can replace the default using a middleware.\nThe SAP Cloud SDK offers a default implementation which allows minor adjustments as described here:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"./http-client#csrf-token-fetching"},"disable for http-client")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../odata/v2-client#custom-csrf-token-handling"},"disable for v2 OData clients")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../odata/v4-client#custom-csrf-token-handling"},"disable for v4 OData clients")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../openapi/execute-request#custom-csrf-token-handling"},"disable OpenApi clients"),".")),(0,i.kt)("p",null,"In this section you will learn how to implement a custom middleware which does only a single request without a slash.\nWe will use the OData client for illustration but everything applies to the other clients as well.\nYou disable the token fetching and add a middleware:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const { businessPartnerApi } = businessPartnerService();\nbusinessPartnerApi\n  .requestBuilder()\n  .update(businessPartner)\n  .middleware([customCsrf])\n  .skipCsrfTokenFetching();\n\nfunction customCsrf(options: HttpMiddlewareOptions) {\n  return requestConfig => {\n    const csrfToken = ''; //add your logic\n    requestConfig.headers['x-csrf-token'] = csrfToken;\n    options.fn(requestConfig);\n  };\n}\n")),(0,i.kt)("p",null,"A basic implementation for fetching a token using a single request without a slash in the end could look like:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"function customCsrf(options: HttpMiddlewareOptions) {\n  return async requestConfig => {\n    const requestConfigCsrf = {\n      method: 'head',\n      headers: {\n        ...requestConfig.headers, //Authentication headers are in here\n        'x-csrf-token': 'Fetch',\n        'content-length': 0\n      },\n      url: requestConfig.url.replace(/\\/$/, '')\n    };\n\n    const response = await axios.request(requestConfigCsrf);\n\n    requestConfig.headers['x-csrf-token'] = response.headers['x-csrf-token'];\n\n    return options.fn(requestConfig);\n  };\n}\n")),(0,i.kt)("p",null,"This implementation is meant as an example to illustrate the concept.\nIt misses many things like setting cookies provided by the first request or checking the request method."))}d.isMDXComponent=!0}}]);