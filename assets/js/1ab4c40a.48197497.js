"use strict";(self.webpackChunksap_cloud_sdk_documentation=self.webpackChunksap_cloud_sdk_documentation||[]).push([[6083],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),d=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=d(n),h=r,m=c["".concat(l,".").concat(h)]||c[h]||p[h]||s;return n?a.createElement(m,i(i({ref:t},u),{},{components:n})):a.createElement(m,i({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,i=new Array(s);i[0]=c;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var d=2;d<s;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},79595:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>d,toc:()=>p});var a=n(87462),r=(n(67294),n(3905)),s=n(74866),i=n(85162);n(44996);const o={id:"v2-vdm-client",title:"Use the OData v2 Type-safe Client API",hide_title:!1,hide_table_of_contents:!1,sidebar_label:"OData v2 Client API",description:"Use SAP Cloud SDK for Java to build and run OData v2 requests in a type-safe way.",keywords:["sap","cloud","sdk","odata","java","VDM","generate"]},l=void 0,d={unversionedId:"features/odata/v2-vdm-client",id:"features/odata/v2-vdm-client",title:"Use the OData v2 Type-safe Client API",description:"Use SAP Cloud SDK for Java to build and run OData v2 requests in a type-safe way.",source:"@site/docs-java/features/odata/v2-client.mdx",sourceDirName:"features/odata",slug:"/features/odata/v2-vdm-client",permalink:"/cloud-sdk/docs/java/features/odata/v2-vdm-client",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-java/features/odata/v2-client.mdx",tags:[],version:"current",frontMatter:{id:"v2-vdm-client",title:"Use the OData v2 Type-safe Client API",hide_title:!1,hide_table_of_contents:!1,sidebar_label:"OData v2 Client API",description:"Use SAP Cloud SDK for Java to build and run OData v2 requests in a type-safe way.",keywords:["sap","cloud","sdk","odata","java","VDM","generate"]},sidebar:"docsJavaSidebar",previous:{title:"Generate an OData Client",permalink:"/cloud-sdk/docs/java/features/odata/vdm-generator"},next:{title:"OData v4 Client API",permalink:"/cloud-sdk/docs/java/features/odata/v4-vdm-client"}},u={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Build and Execute OData Requests With the Typed OData Client",id:"build-and-execute-odata-requests-with-the-typed-odata-client",level:2},{value:"Using the Fluent API",id:"using-the-fluent-api",level:2},{value:"OData Features",id:"odata-features",level:2},{value:"Basic CRUD Operations",id:"basic-crud-operations",level:3},{value:"Handling of ETags",id:"handling-of-etags",level:4},{value:"Handling of Cross-Site Request Forgery Tokens",id:"handling-of-cross-site-request-forgery-tokens",level:4},{value:"Select",id:"select",level:3},{value:"Filter",id:"filter",level:3},{value:"Available Filter Expressions",id:"available-filter-expressions",level:4},{value:"Custom Filter Expressions",id:"custom-filter-expressions",level:4},{value:"Accessing Extensible or Custom Fields",id:"accessing-extensible-or-custom-fields",level:3},{value:"Using Custom Fields in System Query Options",id:"using-custom-fields-in-system-query-options",level:4},{value:"Batch Requests",id:"batch-requests",level:3},{value:"Execute Batch Request",id:"execute-batch-request",level:4},{value:"Access Batch Response",id:"access-batch-response",level:4},{value:"Changeset Response",id:"changeset-response",level:5},{value:"Read Response",id:"read-response",level:5},{value:"Entity Update Strategies",id:"entity-update-strategies",level:2},{value:"Error Handling",id:"error-handling",level:2},{value:"Navigation Properties",id:"navigation-properties",level:2},{value:"Server-Driven Paging",id:"server-driven-paging",level:2}],c={toc:p};function h(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("p",null,"To leverage the type-safe OData v2 client, you need to add following dependencies to the ",(0,r.kt)("inlineCode",{parentName:"p"},"dependencies")," section of your ",(0,r.kt)("inlineCode",{parentName:"p"},"pom.xml"),":"),(0,r.kt)(s.Z,{groupId:"odataClientType",defaultValue:"PregeneratedCloud",values:[{label:"Pregenerated Clients (Cloud)",value:"PregeneratedCloud"},{label:"Pregenerated Clients (On-Premise)",value:"PregeneratedOnPremise"},{label:"Self Generated Clients",value:"Selfgenerated"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"Selfgenerated",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n    <groupId>com.sap.cloud.sdk.datamodel</groupId>\n    <artifactId>odata-core</artifactId>\n</dependency>\n<dependency>\n    <groupId>org.projectlombok</groupId>\n    <artifactId>lombok</artifactId>\n    <scope>provided</scope>\n</dependency>\n<dependency>\n    <groupId>javax.inject</groupId>\n    <artifactId>javax.inject</artifactId>\n    <scope>provided</scope>\n</dependency>\n"))),(0,r.kt)(i.Z,{value:"PregeneratedCloud",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n    <groupId>com.sap.cloud.sdk.s4hana</groupId>\n    <artifactId>s4hana-api-odata</artifactId>\n</dependency>\n"))),(0,r.kt)(i.Z,{value:"PregeneratedOnPremise",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n    <groupId>com.sap.cloud.sdk.s4hana</groupId>\n    <artifactId>s4hana-api-odata-onpremise</artifactId>\n</dependency>\n")))),(0,r.kt)("admonition",{title:"Discover services on the SAP API Business Hub",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"If you would like to consume a specific service, try searching for it on the ",(0,r.kt)("a",{parentName:"p",href:"https://api.sap.com/"},"SAP API Business Hub")," and visit the ",(0,r.kt)("strong",{parentName:"p"},"SAP Cloud SDK")," tab on the landing page of that service.\nThere you will find detailed instructions on how to use the SAP Cloud SDK to get a client library for that specific service.\nLearn more about the integration with the SAP API Business Hub in the ",(0,r.kt)("a",{parentName:"p",href:"https://blogs.sap.com/2021/09/17/the-sap-cloud-sdk-integrates-with-the-sap-api-business-hub/"},"blog"),".")),(0,r.kt)("h2",{id:"build-and-execute-odata-requests-with-the-typed-odata-client"},"Build and Execute OData Requests With the Typed OData Client"),(0,r.kt)("p",null,"The typed OData v2 client allows building type-safe OData v2 requests for a given service.\nThe Java classes represent the ",(0,r.kt)("em",{parentName:"p"},"data model")," and the available ",(0,r.kt)("em",{parentName:"p"},"operations")," of the service.\nAs a consequence all requests that are built through the typed OData v2 client are not only ",(0,r.kt)("em",{parentName:"p"},"syntactically valid")," but also ",(0,r.kt)("em",{parentName:"p"},"semantically valid"),"."),(0,r.kt)("admonition",{title:"Generic OData Client",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"The type-safe client may in some situations not be suitable for your needs.\nFor instance a service might not fully conform to the OData standard, forcing you to perform customized requests.\nOr the typed API doesn't support a specific OData feature just yet."),(0,r.kt)("p",{parentName:"admonition"},"For such cases we recommend leveraging our ",(0,r.kt)("a",{parentName:"p",href:"./generic-untyped-odata-client"},"low-level generic OData client"),".\nOr to fallback directly to the HTTP client level if that's not enough."),(0,r.kt)("p",{parentName:"admonition"},"In all the other situations the type-safe client is preferable and considered best practice.")),(0,r.kt)("h2",{id:"using-the-fluent-api"},"Using the Fluent API"),(0,r.kt)("p",null,"The typed OData client consists of ",(0,r.kt)("em",{parentName:"p"},"service")," and ",(0,r.kt)("em",{parentName:"p"},"data model")," classes.\nThe service classes mirror the API provided by the OData service and serve as entry point for creating requests.\nThey provide a builder that allows for fluently adding further parameters."),(0,r.kt)("p",null,"To execute HTTP requests the OData client leverages ",(0,r.kt)("em",{parentName:"p"},"Destinations")," and are documented in more detail ",(0,r.kt)("a",{parentName:"p",href:"../connectivity/destination-service"},"here"),".\nThe following code snippets assume that such a destination is in place:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"HttpDestination destination;\n")),(0,r.kt)("p",null,"On an abstract level requests are generally build up according to the following pattern:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"result = service.operation()\n    .withParameter(...)\n    .executeRequest(destination);\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"operation")," corresponds to the service's capabilities for entities e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"createEntity")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"readEntities"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"withParameter")," corresponds to:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"OData query parameters e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"filter")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"orderby")),(0,r.kt)("li",{parentName:"ul"},"Or other modifiers like custom headers"))),(0,r.kt)("li",{parentName:"ul"},"Which OData parameters are available depends on the operation.\nFor example, when updating entities the ",(0,r.kt)("inlineCode",{parentName:"li"},"$filter")," parameter is not available.")),(0,r.kt)("p",null,"Below different OData features are documented using the ",(0,r.kt)("a",{parentName:"p",href:"https://api.sap.com/api/API_BUSINESS_PARTNER/resource"},"Business Partner Service")," on SAP S/4HANA as an example.\nIt is represented by the ",(0,r.kt)("inlineCode",{parentName:"p"},"BusinessPartnerService")," class which is part of the pregenerated SAP S/4HANA Virtual Data Model (VDM). The following code snippets assume that an instance of this service is set up:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"BusinessPartnerService service = new DefaultBusinessPartnerService();\n")),(0,r.kt)("h2",{id:"odata-features"},"OData Features"),(0,r.kt)("h3",{id:"basic-crud-operations"},"Basic CRUD Operations"),(0,r.kt)("p",null,"Create, Read, Update and Delete operations on entities are build from the associated service class:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'service.createBusinessPartner(partner);\nservice.getBusinessPartnerByKey("id");\nservice.getAllBusinessPartner();\nservice.updateBusinessPartner(partner);\nservice.deleteBusinessPartnerAddress(address);\n')),(0,r.kt)("p",null,"Each of the above statements returns a builder object that allows for specifying certain request parameters, depending on the operation."),(0,r.kt)("p",null,"The following query parameters and request options are available for these operations:"),(0,r.kt)("p",null,"Query parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"$select")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"$expand")," are available on reading a single or multiple entities"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"$filter"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"$top"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"$skip")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"$orderby")," are available only when reading a collection of entities")),(0,r.kt)("p",null,"Request parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"All operations allow for adding custom headers via ",(0,r.kt)("inlineCode",{parentName:"li"},"withHeader(...)")),(0,r.kt)("li",{parentName:"ul"},"Update operations allow to set either ",(0,r.kt)("inlineCode",{parentName:"li"},"modifyingEntity()")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"replacingEntity()")," which will result in ",(0,r.kt)("inlineCode",{parentName:"li"},"HTTP PATCH")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"HTTP PUT")," respectively.\nBy default, entities are modified via ",(0,r.kt)("inlineCode",{parentName:"li"},"PATCH"),".")),(0,r.kt)("h4",{id:"handling-of-etags"},"Handling of ETags"),(0,r.kt)("p",null,"An ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag"},"ETag")," is a version identifier that is often used to implement an optimistic locking mechanism.\nThe SAP Cloud SDK will try to read version identifiers from responses and set them when sending OData requests that manipulate data."),(0,r.kt)("p",null,"Consider the following example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'partner = service.getBusinessPartnerByKey("id")\n                 .executeRequest(destination);\nresponse = service.updateBusinessPartner(partner)\n                 .executeRequest(destination);\n// update the partner reference\npartner = response.getModifiedEntity();\n')),(0,r.kt)("p",null,"On the read request, the SAP Cloud SDK will automatically try to extract the version identifier from the response and store it within the ",(0,r.kt)("inlineCode",{parentName:"p"},"partner")," object.\nWhen updating it will be taken from there and sent with the ",(0,r.kt)("inlineCode",{parentName:"p"},"If-match")," header."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"If a service requires this header to be sent: Fetching the entity from the service first is essential to ensure that the ETag is present and up to date.")),(0,r.kt)("p",null,"This behavior can be customized.\nThe following code sends a ",(0,r.kt)("inlineCode",{parentName:"p"},"*")," in the ",(0,r.kt)("inlineCode",{parentName:"p"},"IF-MATCH")," header which essentially corresponds to a forced overwrite."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"service.updateBusinessPartner(partner)\n                 .matchAnyVersionIdentifier()\n                 .executeRequest(destination);\n")),(0,r.kt)("h4",{id:"handling-of-cross-site-request-forgery-tokens"},"Handling of Cross-Site Request Forgery Tokens"),(0,r.kt)("p",null,"For create, update and delete requests the SAP Cloud SDK will try to send a ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Cross-site_request_forgery#Cookie-to-header_token"},"cross-site request forgery (CSRF) token"),".\nUpon execution, the request will try to fetch a token first before issuing the create request.\nMany services require this behavior for security reasons.\nHowever, the create request will be made without a CSRF token if none could be obtained."),(0,r.kt)("h3",{id:"select"},"Select"),(0,r.kt)("p",null,"When reading entities, the API offers ",(0,r.kt)("inlineCode",{parentName:"p"},"select( ... )")," on the builders.\nThrough it, the query parameters ",(0,r.kt)("inlineCode",{parentName:"p"},"$select")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"$expand")," are set.\nIt takes in the properties of the entity being queried.\nPrimitive properties are added to ",(0,r.kt)("inlineCode",{parentName:"p"},"$select")," while complex and navigational properties are added to ",(0,r.kt)("inlineCode",{parentName:"p"},"$expand"),".\nThis handling is done automatically by the SAP Cloud SDK."),(0,r.kt)("p",null,"The properties that can be selected or expanded are represented via static ",(0,r.kt)("em",{parentName:"p"},"fields on the entity")," class.\nThere will be a field for each property.\nE.g. for the business partner entity one can find ",(0,r.kt)("inlineCode",{parentName:"p"},"BusinessPartner.FIRST_NAME")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"BusinessPartner.LAST_NAME"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'service.getBusinessPartnerByKey("id")\n    .select(BusinessPartner.FIRST_NAME, BusinessPartner.LAST_NAME, BusinessPartner.TO_BUSINESS_PARTNER_ADDRESS)\n    .executeRequest(destination);\n')),(0,r.kt)("p",null,"The above translates to the following query parameters:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$select=FirstName,LastName,to_BusinessPartnerAddress/*&$expand=to_BusinessPartnerAddress\n")),(0,r.kt)("p",null,"One can also apply select again to the expanded object:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'service.getBusinessPartnerByKey("id")\n    .select(BusinessPartner.FIRST_NAME,\n        BusinessPartner.TO_BUSINESS_PARTNER_ADDRESS\n            .select(BusinessPartnerAddress.ADDRESS_ID,\n                BusinessPartnerAddress.CITY_CODE))\n    .executeRequest(destination);\n')),(0,r.kt)("p",null,"The above translates to the following query parameters:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$select=FirstName,to_BusinessPartnerAddress/AddressID,to_BusinessPartnerAddress/CityCode&$expand=to_BusinessPartnerAddress\n")),(0,r.kt)("h3",{id:"filter"},"Filter"),(0,r.kt)("p",null,"When operating on a collection of entities, the API offers ",(0,r.kt)("inlineCode",{parentName:"p"},"filter( ... )")," on the builders.\nIt directly corresponds to the ",(0,r.kt)("inlineCode",{parentName:"p"},"$filter")," parameter of the request.\nFilters are also built via the static property fields on entities."),(0,r.kt)("p",null,"The following example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"/*\nGet all business partners that either:\n  - Have first name 'Alice' but not last name 'Bob'\n  - Or have first name 'Mallory'\n*/\nservice.getAllBusinessPartner()\n    .filter(BusinessPartner.FIRST_NAME.eq(\"Alice\")\n        .and(BusinessPartner.LAST_NAME.ne(\"Bob\"))\n        .or(BusinessPartner.FIRST_NAME.eq(\"Mallory\"))\n    )\n    .executeRequest(destination);\n")),(0,r.kt)("p",null,"Will translate to this filter parameter:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$filter=(((FirstName eq 'Alice') and (LastName ne 'Bob')) or (FirstName eq 'Mallory'))\n")),(0,r.kt)("p",null,"Take note of the order of ",(0,r.kt)("inlineCode",{parentName:"p"},"and")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"or"),".\nAs ",(0,r.kt)("inlineCode",{parentName:"p"},"or")," is invoked on the result of ",(0,r.kt)("inlineCode",{parentName:"p"},"and")," it will form the outer expression while ",(0,r.kt)("inlineCode",{parentName:"p"},"and")," is an inner expression in the first branch of ",(0,r.kt)("inlineCode",{parentName:"p"},"or"),"."),(0,r.kt)("p",null,"To achieve a different order with ",(0,r.kt)("inlineCode",{parentName:"p"},"and")," as the top level statement one would nest the ",(0,r.kt)("inlineCode",{parentName:"p"},"or")," within ",(0,r.kt)("inlineCode",{parentName:"p"},"and(...)"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'.and(BusinessPartner.LAST_NAME.ne("Bob")\n    .or(BusinessPartner.FIRST_NAME.eq("Mallory"))\n)\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'.and(BusinessPartner.LAST_NAME.ne("Bob")\n    .or(BusinessPartner.FIRST_NAME.eq("Mallory"))\n)\n')),(0,r.kt)("h4",{id:"available-filter-expressions"},"Available Filter Expressions"),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/"},"OData v2 standard")," allows for a limited range of filter expressions compared to OData v4.\nA detailed list of what is available in the SAP Cloud SDK can be obtained from ",(0,r.kt)("a",{parentName:"p",href:"https://help.sap.com/doc/b579bf8578954412aea2b458e8452201/1.0/en-US/com/sap/cloud/sdk/datamodel/odata/helper/package-summary.html"},"the Javadoc"),".\nThe functionality can also be discovered through the fluent API."),(0,r.kt)("h4",{id:"custom-filter-expressions"},"Custom Filter Expressions"),(0,r.kt)("p",null,"The SAP Cloud SDK for Java also allows for providing custom filter expressions.\nThis is useful for instance when the fields to filter by are not known at design time and have to be passed dynamically."),(0,r.kt)("p",null,"For example, to filter based on a field ",(0,r.kt)("inlineCode",{parentName:"p"},"ShoeSize")," use:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'ValueBoolean filterExpression = FieldReference.of("ShoeSize").equalTo(42);\nExpressionFluentHelper<MyEntity> customFilter = new ExpressionFluentHelper<>(filterExpression);\n\n// use the custom filter in the .filter() method of your request builder\nmyService.getAllBusinessPartner().filter(customFilter).executeRequest(destination);\n')),(0,r.kt)("p",null,"Which produces the HTTP query:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"?$filter=(ShoeSize eq 42)\n")),(0,r.kt)("h3",{id:"accessing-extensible-or-custom-fields"},"Accessing Extensible or Custom Fields"),(0,r.kt)("p",null,"The concept of ",(0,r.kt)("strong",{parentName:"p"},"In-app Extensibility")," allows users to introduce additional fields to an existing SAP S/4HANA service.\nTo consume and work with such custom fields in your application code, SAP Cloud SDK introduces the concept of custom fields."),(0,r.kt)("p",null,"You can set custom fields on an entity through the ",(0,r.kt)("inlineCode",{parentName:"p"},".setCustomField")," method and read the value in the entity using ",(0,r.kt)("inlineCode",{parentName:"p"},".getCustomField(fieldName)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'businessPartner.setCustomField("shoeSize", 10);\n\nfinal int shoeSize = businessPartner.getCustomField("shoeSize");\n')),(0,r.kt)("p",null,"If you are unsure about the custom fields added by the customer, you can still use ",(0,r.kt)("inlineCode",{parentName:"p"},"getCustomFieldNames()")," to obtain the set of custom fields introduced.\nUse this set further on to pull values from the entity."),(0,r.kt)("p",null,"For e.g."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"final Set<String> customfieldNames = businessPartner.getCustomFieldNames();\n\nfor(String customFieldName: customfieldNames){\n    final Object customField = businessPartner.getCustomField(customFieldName);\n }\n")),(0,r.kt)("p",null,"The accessors for custom fields respect multitenancy.\n",(0,r.kt)("inlineCode",{parentName:"p"},"getCustomFieldNames()"),", for example, fetches only custom field names available in the context of the current tenant."),(0,r.kt)("h4",{id:"using-custom-fields-in-system-query-options"},"Using Custom Fields in System Query Options"),(0,r.kt)("p",null,"You can also pass custom fields to select or filter system query options:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'service().getAllBusinessPartner()\n         .select(new BusinessPartnerField<>("ShoeSize"))\n         .select(()->"AnotherCustomField")\n         .filter(new BusinessPartnerField<>("Shoesize").eq(42))\n         .executeRequest(destination)\n')),(0,r.kt)("p",null,"Please be aware that such an example can work for all tenants only if ",(0,r.kt)("inlineCode",{parentName:"p"},"ShoeSize")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"AnotherCustomField")," are custom fields that have been defined by all tenants."),(0,r.kt)("h3",{id:"batch-requests"},"Batch Requests"),(0,r.kt)("p",null,"Batch requests allow wrapping multiple OData requests into one single batch call.\nThereby we reduce the number of round trips to the remote server.\nRefer to the ",(0,r.kt)("a",{parentName:"p",href:"https://www.odata.org/documentation/odata-version-2-0/batch-processing/"},"official OData V2 spec")," for further reference about batch requests, their semantics, and the request/response format."),(0,r.kt)("h4",{id:"execute-batch-request"},"Execute Batch Request"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"service")," object offers the method ",(0,r.kt)("inlineCode",{parentName:"p"},"batch")," which allows access to the batch-related methods that help build the batch request."),(0,r.kt)("p",null,"Multiple single requests like ",(0,r.kt)("inlineCode",{parentName:"p"},"createBusinessPartnerAddress")," and others can be wrapped into an ",(0,r.kt)("a",{parentName:"p",href:"https://www.odata.org/documentation/odata-version-2-0/batch-processing/"},"OData BATCH ChangeSet"),".\nOData BATCH changesets are meant to wrap transactional requests together for better performance.\nOData Function Import can be also used inside OData Batch changesets, for that use the method ",(0,r.kt)("inlineCode",{parentName:"p"},"addFunctionImport(...)"),".\nEach changeset is opened with ",(0,r.kt)("inlineCode",{parentName:"p"},"beginChangeSet")," and closed with ",(0,r.kt)("inlineCode",{parentName:"p"},"endChangeSet"),".\nYou can wrap multiple changesets into one batch request."),(0,r.kt)("p",null,"Non-modification or in other words Read requests can be added outside changesets with the ",(0,r.kt)("inlineCode",{parentName:"p"},"addReadOperations")," method."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Please be aware that function imports using GET cannot be included inside a Batch changeset using ",(0,r.kt)("inlineCode",{parentName:"p"},"addFunctionImport(...)"),"\nAdd them into batch requests outside changesets using ",(0,r.kt)("inlineCode",{parentName:"p"},"addReadOperations")," method.")),(0,r.kt)("p",null,"Use ",(0,r.kt)("inlineCode",{parentName:"p"},"executeRequest")," to issue the batch request to the remote system.\nWe receive an instance of ",(0,r.kt)("inlineCode",{parentName:"p"},"BatchResponse")," as the result object."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'BusinessPartnerAddress addressToCreate1;\nBusinessPartnerAddress addressToCreate2;\n\nBusinessPartnerFluentHelper requestTenEntities = service.getAllBusinessPartner().top(10);\nBusinessPartnerByKeyFluentHelper requestSingleEntity = service.getBusinessPartnerByKey("bupa9000");\nBusinessPartnerFictionalFluentHelper callFictionalFunction = service.fictionalFunction(); //Assuming this fictional function import uses GET\n\nBatchResponse result =\n    service\n        .batch()\n        .beginChangeSet()\n        .createBusinessPartnerAddress(addressToCreate1)\n        .createBusinessPartnerAddress(addressToCreate2)\n        .endChangeSet()\n        .addReadOperations(requestTenEntities)\n        .addReadOperations(requestSingleEntity)\n        .addReadOperations(fictionalFunction)\n        .executeRequest(destination);\n')),(0,r.kt)("p",null,"Alternatively, you can also assemble changesets from individual requests with ",(0,r.kt)("inlineCode",{parentName:"p"},"addChangeSet"),".\nThis option allows you to further configure your requests by, for example, attaching custom headers to special parts of your changeset like so:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'BusinessPartnerAddress addressToCreate;\nBusinessPartnerAddress addressToUpdate;\nBusinessPartnerAddress addressToDelete;\n\nBusinessPartnerAddressCreateFluentHelper createRequest =\n    service\n        .createBusinessPartnerAddress(addressToCreate)\n        .withHeader("header-for-create", "create value");\nBusinessPartnerAddressUpdateFluentHelper updateRequest =\n    service\n        .updateBusinessPartnerAddress(addressToUpdate)\n        .withHeader("header-for-update", "update value");\nBusinessPartnerAddressDeleteFluentHelper deleteRequest =\n    service\n        .deleteBusinessPartnerAddress(addressToDelete)\n        .withHeader("header-for-delete", "delete value");\n\nBatchResponse result =\n    service\n        .batch()\n        .addChangeSet(createRequest, updateRequest, deleteRequest)\n        .executeRequest(destination);\n')),(0,r.kt)("h4",{id:"access-batch-response"},"Access Batch Response"),(0,r.kt)("p",null,"In OData Batch, the response is structured similarly to the request.\nThe unordered responses of data modification requests are accessible with a given changeset index.\nThe ordered responses of data retrieval requests are accessible with the reference of the original request object."),(0,r.kt)("h5",{id:"changeset-response"},"Changeset Response"),(0,r.kt)("p",null,"Use the method ",(0,r.kt)("inlineCode",{parentName:"p"},"get")," to access the individual changeset responses by index."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"Try<BatchResponseChangeSet> changeSetTry = result.get(0);\n")),(0,r.kt)("p",null,"The returned ",(0,r.kt)("inlineCode",{parentName:"p"},"Try")," allows checking if the respective changeset was processed successfully by the remote server.\nPer the specification, either all operations or none within the same changeset are successful.\nHence, if ",(0,r.kt)("inlineCode",{parentName:"p"},"changeSetTry.isSuccess()")," is true, you can derive that all operations in the changeset are successful."),(0,r.kt)("p",null,"In case the changeset contained at least one create operation, you can gain access to the created entity representations by using the method ",(0,r.kt)("inlineCode",{parentName:"p"},"getCreatedEntities"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"if (changeSetTry.isSuccess()) {\n    //now you can access the created entities\n    final List<VdmEntity<?>> createdEntities = changeSet.get().getCreatedEntities();\n}\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"You have to cast the entity representations from the generic type ",(0,r.kt)("inlineCode",{parentName:"p"},"VdmEntity")," to the respective subclasses.")),(0,r.kt)("h5",{id:"read-response"},"Read Response"),(0,r.kt)("p",null,"Use the method ",(0,r.kt)("inlineCode",{parentName:"p"},"getReadResult")," to extract the deserialized response of a given read operation:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"List<BusinessPartner> entities = result.getReadResult(requestTenEntities);\nBusinessPartner entity = result.getReadResult(requestSingleEntity);\nList<functionResult> functionResult = result.getReadResult(callFictionalFunction);\n")),(0,r.kt)("p",null,"You can use the same methods to extract deserialized responses of function imports that use GET."),(0,r.kt)("p",null,"Instead of an index to indicate the batch position, the API expects the original request reference.\nThe request-response mapping and deserialization are happening internally."),(0,r.kt)("h2",{id:"entity-update-strategies"},"Entity Update Strategies"),(0,r.kt)("p",null,"The SAP Cloud SDK supports different strategies for updating entities which differ in the HTTP method and the payload of the update request."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"To update an entity it should first be retrieved from the service.\nThis ensures the latest state of the entity is updated.\nOtherwise, updating with old data could erase changes that have been made to the entity in the meantime.\nMany services will enforce this behavior with optimistic locking mechanisms.\nRefer to the ",(0,r.kt)("a",{parentName:"p",href:"#handling-of-etags"},"section about ETags for details"),".")),(0,r.kt)(s.Z,{groupId:"updateStrategy",defaultValue:"modify",values:[{label:"Modify Entity (default)",value:"modify"},{label:"Replace Entity",value:"replace"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"modify",mdxType:"TabItem"},(0,r.kt)("p",null,"The default strategy is the ",(0,r.kt)("em",{parentName:"p"},"modifying entity update strategy")," which attempts to modify only the necessary entity fields in the remote system.\nIt issues a PATCH request and includes only the fields in the request payload whose values were ",(0,r.kt)("em",{parentName:"p"},"changed by its setter method"),".\nHence, fields whose values remain unchanged are not sent to the target system.\nCalling the method ",(0,r.kt)("inlineCode",{parentName:"p"},"includingFields(fields ...)")," instructs the SAP Cloud SDK to add the mentioned fields explicitly in the update request.\nYou could also add navigation properties to your request using the method.\nThis is useful for backend systems that require some unchanged fields in the request payload for given reasons."),(0,r.kt)("p",null,"This update strategy can be explicitly chosen by invoking the method ",(0,r.kt)("inlineCode",{parentName:"p"},"modifyingEntity()")," while building the update request."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"service.updateBusinessPartner(partner)\n    //method call optional, since active by default\n    .modifyingEntity()\n    //add the Business Partner full name and address explicitly to the update request\n    .includingFields(BusinessPartner.BUSINESS_PARTNER_FULL_NAME,BusinessPartner.TO_BUSINESS_PARTNER_ADDRESS)\n    .executeRequest(destination);\n"))),(0,r.kt)(i.Z,{value:"replace",mdxType:"TabItem"},(0,r.kt)("p",null,"The ",(0,r.kt)("em",{parentName:"p"},"replacing entity update strategy")," attempts to replace the full entity in the remote system.\nIt issues a PUT request and submits all fields in the update request, regardless of any field changes."),(0,r.kt)("p",null,"This update strategy can be explicitly chosen to invoke the method ",(0,r.kt)("inlineCode",{parentName:"p"},"replacingEntity()")," while building the update request."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"service.updateBusinessPartner(partner)\n    .replacingEntity()\n    .executeRequest(destination);\n")),(0,r.kt)("p",null,"For excluding read-only fields or dependent properties that are not tied to key properties, from your ",(0,r.kt)("inlineCode",{parentName:"p"},"PUT")," request payload, use ",(0,r.kt)("inlineCode",{parentName:"p"},"excludingFields()")," on your update request.\nIt also allows you to exclude navigation properties from your request."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"service.updateBusinessPartner(partner)\n    .replacingEntity()\n    .excludingFields(BusinessPartner.BUSINESS_PARTNER_FULL_NAME,BusinessPartner.TO_BUSINESS_PARTNER_ADDRESS)\n    .executeRequest(destination);\n")))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"It depends on the capabilities of the specific OData service in the remote system which update strategies are supported in an end-to-end scenario.\nFor example, there are cases where OData services do not support PUT requests.")),(0,r.kt)("h2",{id:"error-handling"},"Error Handling"),(0,r.kt)("p",null,"Sometimes requests fail and the SAP Cloud SDK provides a flexible way to deal with such failures on multiple levels.\nAll ",(0,r.kt)("inlineCode",{parentName:"p"},"executeRequest")," methods may throw a runtime exception (extending) ",(0,r.kt)("inlineCode",{parentName:"p"},"ODataException"),".\nThis will always contain the request which was (attempted to be) sent out as well as the cause of the exception.\nTo handle all kind of failures consider the following code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'try { ... }\n catch( final ODataException e ) {\n    ODataQueryGeneric query = e.getQuery();\n    logger.debug("The following query failed: {}", query);\n    // do something else\n}\n')),(0,r.kt)("p",null,"This handling is the most generic, handling all possible failures.\nFor more specific information dedicated exceptions are inheriting from ",(0,r.kt)("inlineCode",{parentName:"p"},"ODataException"),".\nPlease check the ",(0,r.kt)("a",{parentName:"p",href:"https://help.sap.com/doc/b579bf8578954412aea2b458e8452201/1.0/en-US/com/sap/cloud/sdk/datamodel/odata/client/exception/ODataException.html"},"documentation")," for details on all the exception types."),(0,r.kt)("p",null,"To handle different kinds of failure one can list multiple catch clauses to cover different levels or cases that might occur, e.g.:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'try { ... }\ncatch( ODataServiceErrorException e ) {\n    // handle the specific error message from the response payload\n    ODataServiceError odataError = e.getODataError();\n    logger.debug("The OData service responded with an error: {}", odataError);\n} catch( ODataDeserializationException e ) {\n    // handle failures in deserialization\n} catch( ODataResponseException e ) {\n    // handle all other errors originating from handling the HTTP response\n    int httpCode = e.getHttpCode();\n    Collection<Header> httpCode = e.getHttpHeaders();\n    Option<String> httpBody = e.getHttpBody();\n}\n')),(0,r.kt)("h2",{id:"navigation-properties"},"Navigation Properties"),(0,r.kt)("p",null,"A navigation property describes a unidirectional relationship between two entity types.\nLike other properties, it has a name and declares a multiplicity, i.e. whether to expect a single or multiple values.\nAdditionally, a navigation property allows for dedicated CRUD operations, that may not be exposed by default on entity sets of the service root.\nSuch operations also provide a convenient way to access the nested resources of entities."),(0,r.kt)("p",null,"The typed OData client for OData v2 supports the following operations on (first-level only) navigation properties:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Create")),(0,r.kt)("p",null,"The below example leverages the creation of a nested entity in relation to an existing entity:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'/*\nCreate a new address for a specific business partner.\n*/\nBusinessPartner businessPartnerById = BusinessPartner.builder().businessPartner("123").build();\nBusinessPartnerAddress addressItem = BusinessPartnerAddress.builder().country("DE").build();\n\nservice.createBusinessPartnerAddress( addressItem )\n    .asChildOf( businessPartnerById, BusinessPartner.TO_BUSINESS_PARTNER_ADDRESS )\n    .executeRequest( destination );\n')),(0,r.kt)("p",null,"This sample API call translates to the following service request:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'POST /ODataService/API_BUSINESS_PARTNER/A_BusinessPartner(123)/to_BusinessPartnerAddress\n{\n  "country": "de"\n}\n')),(0,r.kt)("h2",{id:"server-driven-paging"},"Server-Driven Paging"),(0,r.kt)("p",null,"Pagination describes the practice of splitting a collection of entities from reading requests into one or many pages.\nThe paging behavior is determined by both the server and the client."),(0,r.kt)("p",null,"OData service operators may decide to enable server-driven pagination to limit the amount of data that is fetched and sent over the network to the client.\nGeneric query options can yield huge amounts of data.\nBy splitting the result-set into sequential pages of entities, the data can be requested incrementally.\nThis reduces initial network load and improves overall response times.\nIf the payload of an OData response contains a link including a ",(0,r.kt)("inlineCode",{parentName:"p"},"$skiptoken"),", then it indicates a next page to the result-set.\nThe iterable result-set is a consistent snapshot of the data, it can not change between reading individual pages."),(0,r.kt)("p",null,"In comparison, the OData consumer may use query options ",(0,r.kt)("inlineCode",{parentName:"p"},"$top")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"$skip")," (client-driven paging) to read partial data from the result-set.\nBut relying on a consistent state while browsing through the data can be problematic.\nBetween individual requests, another user could delete or add an item.\nThis would result in an inconsistent aggregation of data."),(0,r.kt)("p",null,"By default, the SAP Cloud SDK automatically resolves all pages of a result-set if server-driven paging is encountered.\nFor the API consumer, it is not necessary to parse the next link and instantiate follow-up requests to aggregate the full result-set."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"List<BusinessPartner> iterablePagesOfEntities = service\n  .getAllBusinessPartner()\n  .executeRequest( destination );\n")),(0,r.kt)("p",null,"In case memory efficiency and response time of the consuming application becomes a priority, then the advanced API provides additional means to manually iterate through the internal pages.\nWhile accessing the following methods, the internal HTTP requests are executed lazily:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"Iterable<List<BusinessPartner>> iterablePagesOfEntities = service\n  .getAllBusinessPartner()\n  .iteratingPages()\n  .executeRequest( destination );\n\nIterable<BusinessPartner> iterableEntities = service\n  .getAllBusinessPartner()\n  .iteratingEntities()\n  .executeRequest(destination);\n\nStream<BusinessPartner> streamingEntities = service\n  .getAllBusinessPartner()\n  .streamingEntities()\n  .executeRequest(destination);\n")),(0,r.kt)("p",null,"The request builder allows for setting the optional parameter for preferred page size, e.g.:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"Iterable<List<BusinessPartner>> iterablePagesOfEntities = service\n  .getAllBusinessPartner()\n  .withPreferredPageSize(20)\n  .iteratingPages()\n  .executeRequest( destination );\n")),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Please note that the OData service is not obliged to respect this setting.")))}h.isMDXComponent=!0},85162:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(67294),r=n(86010);const s="tabItem_Ymn6";function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(s,i),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>P});var a=n(87462),r=n(67294),s=n(86010),i=n(12466),o=n(76775),l=n(91980),d=n(67392),u=n(50012);function p(e){return function(e){var t;return(null==(t=r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})))?void 0:t.filter(Boolean))??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function c(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,d.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function h(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const a=(0,o.k6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l._X)(s),(0,r.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(a.location.search);t.set(s,e),a.replace({...a.location,search:t.toString()})}),[s,a])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,s=c(e),[i,o]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!h({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:s}))),[l,d]=m({queryString:n,groupId:a}),[p,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,s]=(0,u.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:a}),g=(()=>{const e=l??p;return h({value:e,tabValues:s})?e:null})();(0,r.useLayoutEffect)((()=>{g&&o(g)}),[g]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!h({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),d(e),f(e)}),[d,f,s]),tabValues:s}}var g=n(72389);const k="tabList__CuJ",v="tabItem_LNqP";function y(e){let{className:t,block:n,selectedValue:o,selectValue:l,tabValues:d}=e;const u=[],{blockElementScrollPositionUntilNextRender:p}=(0,i.o5)(),c=e=>{const t=e.currentTarget,n=u.indexOf(t),a=d[n].value;a!==o&&(p(t),l(a))},h=e=>{var t;let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=u.indexOf(e.currentTarget)+1;n=u[t]??u[0];break}case"ArrowLeft":{const t=u.indexOf(e.currentTarget)-1;n=u[t]??u[u.length-1];break}}null==(t=n)||t.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":n},t)},d.map((e=>{let{value:t,label:n,attributes:i}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>u.push(e),onKeyDown:h,onClick:c},i,{className:(0,s.Z)("tabs__item",v,null==i?void 0:i.className,{"tabs__item--active":o===t})}),n??t)})))}function b(e){let{lazy:t,children:n,selectedValue:a}=e;const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},s.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function N(e){const t=f(e);return r.createElement("div",{className:(0,s.Z)("tabs-container",k)},r.createElement(y,(0,a.Z)({},e,t)),r.createElement(b,(0,a.Z)({},e,t)))}function P(e){const t=(0,g.Z)();return r.createElement(N,(0,a.Z)({key:String(t)},e))}}}]);