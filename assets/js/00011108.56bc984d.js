"use strict";(self.webpackChunksap_cloud_sdk_documentation=self.webpackChunksap_cloud_sdk_documentation||[]).push([[4653],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var a=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,i=function(e,t){if(null==e)return{};var r,a,i={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=a.createContext({}),u=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,i=e.mdxType,n=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(r),m=i,f=d["".concat(l,".").concat(m)]||d[m]||c[m]||n;return r?a.createElement(f,o(o({ref:t},p),{},{components:r})):a.createElement(f,o({ref:t},p))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=r.length,o=new Array(n);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var u=2;u<n;u++)o[u]=r[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},22306:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>n,metadata:()=>s,toc:()=>u});var a=r(87462),i=(r(67294),r(3905));const n={},o=void 0,s={unversionedId:"features/odata/common/entity/custom-de-serializers",id:"features/odata/common/entity/custom-de-serializers",title:"custom-de-serializers",description:"Since version 2 of the SAP Cloud SDK you can customize how the data you get from a service is deserialized and serialize when sending it back to the service.",source:"@site/docs-js/features/odata/common/entity/custom-de-serializers.mdx",sourceDirName:"features/odata/common/entity",slug:"/features/odata/common/entity/custom-de-serializers",permalink:"/cloud-sdk/docs/js/v3/features/odata/common/entity/custom-de-serializers",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/odata/common/entity/custom-de-serializers.mdx",tags:[],version:"current",frontMatter:{}},l={},u=[{value:"Using (De-)Serializers for Temporal",id:"using-de-serializers-for-temporal",level:4}],p={toc:u};function c(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Since version 2 of the SAP Cloud SDK you can customize how the data you get from a service is ",(0,i.kt)("em",{parentName:"p"},"deserialized")," and ",(0,i.kt)("em",{parentName:"p"},"serialize")," when sending it back to the service."),(0,i.kt)("p",null,"To influence (de-)serialization you have to provide your custom (de-)serializers to a service."),(0,i.kt)("p",null,"A (de-)serializer is an object of type ",(0,i.kt)("inlineCode",{parentName:"p"},"DeSerializer")," that defines the following callback functions:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"deserialize()"),": Takes a value as given by the service and returns a deserialized value, i.e. its represenation in code."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"serialize()"),": Takes a deserialized value and transforms it to the format and type expected by the service."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"serializeToUri()")," (optional): For some EDM types the serialized format differs between values in a payload and URI.\nThis function takes a deserialized value and transforms it to a string with the format expected by the service for URIs.\nThe second parameter of this callback function references the ",(0,i.kt)("inlineCode",{parentName:"li"},"serialize()")," function, which can optionally be used as a basis for URI serialization.\nIf this function is not specified, the URI serialization defaults to the ",(0,i.kt)("inlineCode",{parentName:"li"},"serialize()")," function.")),(0,i.kt)("p",null,"The type ",(0,i.kt)("inlineCode",{parentName:"p"},"DeSerializer")," has one generic parameter, that represents the deserialized type."),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const doubleDeSerializer: DeSerializer<number> = {\n  deserialize: (val: string) => Number(val),\n  serialize: (val: number) => val.toString(),\n  serializeToUri: (value, serialize) => `${serialize(value)}D`\n};\n")),(0,i.kt)("p",null,"The example above shows a simplified version of the SAP Cloud SDK default (de-)serializer for the EDM type ",(0,i.kt)("inlineCode",{parentName:"p"},"Edm.Double"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"deserialize()")," function converts the raw value to a number."),(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"serialize()")," function converts the deserialized value to a string."),(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"serializeToUri()")," function makes use of the ",(0,i.kt)("inlineCode",{parentName:"li"},"serialize()")," function and appends a ",(0,i.kt)("inlineCode",{parentName:"li"},"D")," at the end of the string.")),(0,i.kt)("p",null,"To specify custom (de-)serializers for a service, you have to pass an object to the service function, that maps from EDM type(s) to your custom (de-)serializer.\nAll unspecified EDM types are still (de-)serialized using the SAP Cloud SDK defaults."),(0,i.kt)("p",null,"Example, using the above ",(0,i.kt)("inlineCode",{parentName:"p"},"doubleDeSerializer")," for the business partner service:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const customDeSerializers = { 'Edm.Double': doubleDeSerializer };\nconst { businessPartnerApi } = businessPartnerService(customDeSerializers);\n")),(0,i.kt)("p",null,"All requests against the ",(0,i.kt)("inlineCode",{parentName:"p"},"businessPartnerApi")," will now use the custom (de-)serializers for ",(0,i.kt)("inlineCode",{parentName:"p"},"Edm.Double")," and the default (de-)serializers for all other EDM types."),(0,i.kt)("h4",{id:"using-de-serializers-for-temporal"},"Using (De-)Serializers for Temporal"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://tc39.es/proposal-temporal/docs/"},"Temporal")," is a stage 3 proposal for a date/time API in ECMAScript.\nAt the time, there is polyfill available, but it is not recommended for productive use.\nOnce it is recommended for productive use, the SAP Cloud SDK will adapt it as the default over Moment.js.\nTemporal-based (de-)serializers for the SAP Cloud SDK are available as a separate npm package, ",(0,i.kt)("inlineCode",{parentName:"p"},"@sap-cloud-sdk/temporal-de-serializers"),"."),(0,i.kt)("p",null,"Adapt your code to use this package, for example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { temporalDeSerializersV2 } from '@sap-cloud-sdk/temporal-de-serializers';\nconst { businessPartnerApi } = businessPartnerService(temporalDeSerializersV2);\n\nbusinessPartnerApi\n  .entityBuilder()\n  .organizationFoundationDate(\n    Temporal.PlainDateTime.from('1995-12-07T03:24:30')\n  )\n  .build();\n")))}c.isMDXComponent=!0}}]);