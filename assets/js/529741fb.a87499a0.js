"use strict";(self.webpackChunksap_cloud_sdk_documentation=self.webpackChunksap_cloud_sdk_documentation||[]).push([[9426],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),c=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=c(e.components);return i.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),f=a,m=d["".concat(s,".").concat(f)]||d[f]||u[f]||o;return n?i.createElement(m,r(r({ref:t},p),{},{components:n})):i.createElement(m,r({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,r=new Array(o);r[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,r[1]=l;for(var c=2;c<o;c++)r[c]=n[c];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},50055:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u}});var i=n(87462),a=n(63366),o=(n(67294),n(3905)),r=["components"],l={id:"sdk-connectivity-http-client",title:"Use the HttpClient Accessor To Configure Requests To Remote Services",hide_title:!1,hide_table_of_contents:!1,sidebar_label:"HttpClient",description:"This article describes how the SAP Cloud SDK for Java can be used to prepare instances of HttpClient. This class enables connections to other systems and services like SAP S/4HANA or SAP Business Technology Platform services.",keywords:["sap","cloud","sdk","destination","java","connectivity","http"]},s=void 0,c={unversionedId:"java/features/connectivity/sdk-connectivity-http-client",id:"java/features/connectivity/sdk-connectivity-http-client",title:"Use the HttpClient Accessor To Configure Requests To Remote Services",description:"This article describes how the SAP Cloud SDK for Java can be used to prepare instances of HttpClient. This class enables connections to other systems and services like SAP S/4HANA or SAP Business Technology Platform services.",source:"@site/docs/java/features/connectivity/http-client.mdx",sourceDirName:"java/features/connectivity",slug:"/java/features/connectivity/sdk-connectivity-http-client",permalink:"/cloud-sdk/docs/java/features/connectivity/sdk-connectivity-http-client",draft:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs/java/features/connectivity/http-client.mdx",tags:[],version:"current",lastUpdatedBy:"dependabot[bot]",lastUpdatedAt:1657719891,formattedLastUpdatedAt:"Jul 13, 2022",frontMatter:{id:"sdk-connectivity-http-client",title:"Use the HttpClient Accessor To Configure Requests To Remote Services",hide_title:!1,hide_table_of_contents:!1,sidebar_label:"HttpClient",description:"This article describes how the SAP Cloud SDK for Java can be used to prepare instances of HttpClient. This class enables connections to other systems and services like SAP S/4HANA or SAP Business Technology Platform services.",keywords:["sap","cloud","sdk","destination","java","connectivity","http"]},sidebar:"someSidebar",previous:{title:"Destinations",permalink:"/cloud-sdk/docs/java/features/connectivity/sdk-connectivity-destination-service"},next:{title:"Certificate-based Authentication",permalink:"/cloud-sdk/docs/java/features/connectivity/sdk-connectivity-mtls"}},p={},u=[{value:"General Usage",id:"general-usage",level:2},{value:"Customization",id:"customization",level:2},{value:"Overriding Default Behavior",id:"overriding-default-behavior",level:2}],d={toc:u};function f(e){var t=e.components,n=(0,a.Z)(e,r);return(0,o.kt)("wrapper",(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The SAP Cloud SDK offers basic functionality that helps with connecting to other systems and services like SAP S/4HANA Cloud or On-premise edition.\nThe SAP Cloud SDK leverages the existing API of ",(0,o.kt)("inlineCode",{parentName:"p"},"HttpClient")," and applies conveniently managed properties, e.g. according to a specific destination configuration."),(0,o.kt)("p",null,"In the following paragraphs, the ",(0,o.kt)("inlineCode",{parentName:"p"},"HttpClientAccessor")," API and its usage will be described."),(0,o.kt)("h2",{id:"general-usage"},"General Usage"),(0,o.kt)("p",null,"In general an ",(0,o.kt)("inlineCode",{parentName:"p"},"HttpClient")," can be instantiated through the ",(0,o.kt)("inlineCode",{parentName:"p"},"HttpClientAcessor"),".\nThe SAP Cloud SDK itself uses the accessor class for all internal requests as well."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"HttpClient client = HttpClientAccessor.getHttpClient();\n")),(0,o.kt)("p",null,"If On-premise the goal is to create a client with properties according to a specific destination, it can be provided as argument:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'HttpDestination destination = DestinationAccessor.getDestination("my-destination").asHttp();\nHttpClient client = HttpClientAccessor.getHttpClient(destination);\n')),(0,o.kt)("p",null,"When using a destination, the configured destination URL will be used as base path for the subsequent requests for ",(0,o.kt)("inlineCode",{parentName:"p"},"client"),"."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Please note that similar to other accessor-based APIs, the SAP Cloud SDK offers methods with a ",(0,o.kt)("inlineCode",{parentName:"p"},"try")," prefix to allow for optional VAVR-enhanced API access.")),(0,o.kt)("h2",{id:"customization"},"Customization"),(0,o.kt)("p",null,"When the properties of ",(0,o.kt)("inlineCode",{parentName:"p"},"HttpClient")," are not working for the application, e.g. timeout is too short or too long, then the generation can be customized.\nPlease find the ",(0,o.kt)("inlineCode",{parentName:"p"},"HttpClientFactory")," interface and the provided implementation ",(0,o.kt)("inlineCode",{parentName:"p"},"DefaultHttpClientFactory"),".\nThey offer a similar method ",(0,o.kt)("inlineCode",{parentName:"p"},"createHttpClient")," with optional destination argument:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"HttpClientFactory factory = new DefaultHttpClientFactory();\n\nHttpClient genericClient = factory.createHttpClient();\nHttpClient destinationClient = factory.createHttpClient(destination);\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"DefaultHttpClientFactory")," type offers a static builder, to enable custom properties for:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"timeoutMilliseconds")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"maxConnectionsPerRoute")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"maxConnectionsTotal"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"HttpClientFactory customFactory = DefaultHttpClientFactory.builder()\n  .timeoutMilliseconds(60000)\n  .maxConnectionsPerRoute(100)\n  .maxConnectionsTotal(200)\n  .build();\n")),(0,o.kt)("p",null,"When inheriting from ",(0,o.kt)("inlineCode",{parentName:"p"},"DefaultHttpClientFactory")," it's possible to provide even deeper customization:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'DefaultHttpClientFactory customFactory = new DefaultHttpClientFactory() {\n  @Override\n  protected RequestConfig.Builder getRequestConfigBuilder( HttpDestinationProperties destination ) {\n    return super.getRequestConfigBuilder(destination)\n      .setProxy(new HttpHost("proxy", 8080, "http"));\n  }\n  @Override\n  protected HttpClientBuilder getHttpClientBuilder( HttpDestinationProperties destination ) {\n    return super.getHttpClientBuilder(destination)\n      .setUserAgent("SDK");\n  }\n};\n')),(0,o.kt)("p",null,"It is possible to take advantage of calls to ",(0,o.kt)("inlineCode",{parentName:"p"},"super")," - or use your own objects directly.\nThis inheritance enables custom implementation for the following methods:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"getHttpClientBuilder")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"getRequestConfigBuilder")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"getSocketConfigBuilder")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"getConnectionManager"))),(0,o.kt)("h2",{id:"overriding-default-behavior"},"Overriding Default Behavior"),(0,o.kt)("p",null,"Now the customization of the HTTP client factory is available and we can adjust the default behavior for the accessor:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"HttpClientFactory factory = new MyCustomHttpClientFactory();\nHttpClientAccessor.setHttpClientFactory(factory);\n")),(0,o.kt)("p",null,"From now on the custom factory will be used for every explicit and implicit HTTP request running through the SAP Cloud SDK."))}f.isMDXComponent=!0}}]);